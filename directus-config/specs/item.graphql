type Query {
  directus_sync_id_map(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_sync_id_map!]!
  directus_sync_id_map_by_id(id: ID!, version: String): directus_sync_id_map
  directus_sync_id_map_aggregated(groupBy: [String], filter: directus_sync_id_map_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_sync_id_map_aggregated!]!
  directus_sync_id_map_by_version(version: String!, id: ID!): version_directus_sync_id_map
  collectivo_tiles(filter: collectivo_tiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tiles!]!
  collectivo_tiles_by_id(id: ID!, version: String): collectivo_tiles
  collectivo_tiles_aggregated(groupBy: [String], filter: collectivo_tiles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectivo_tiles_aggregated!]!
  collectivo_tiles_by_version(version: String!, id: ID!): version_collectivo_tiles
  shifts_shifts(filter: shifts_shifts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_shifts!]!
  shifts_shifts_by_id(id: ID!, version: String): shifts_shifts
  shifts_shifts_aggregated(groupBy: [String], filter: shifts_shifts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [shifts_shifts_aggregated!]!
  shifts_shifts_by_version(version: String!, id: ID!): version_shifts_shifts
  shifts_categories(filter: shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_categories!]!
  shifts_categories_by_id(id: ID!, version: String): shifts_categories
  shifts_categories_aggregated(groupBy: [String], filter: shifts_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [shifts_categories_aggregated!]!
  shifts_categories_by_version(version: String!, id: ID!): version_shifts_categories
  collectivo_tags(filter: collectivo_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tags!]!
  collectivo_tags_by_id(id: ID!, version: String): collectivo_tags
  collectivo_tags_aggregated(groupBy: [String], filter: collectivo_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectivo_tags_aggregated!]!
  collectivo_tags_by_version(version: String!, id: ID!): version_collectivo_tags
  collectivo_tags_directus_users(filter: collectivo_tags_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tags_directus_users!]!
  collectivo_tags_directus_users_by_id(id: ID!, version: String): collectivo_tags_directus_users
  collectivo_tags_directus_users_aggregated(groupBy: [String], filter: collectivo_tags_directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectivo_tags_directus_users_aggregated!]!
  collectivo_tags_directus_users_by_version(version: String!, id: ID!): version_collectivo_tags_directus_users
  collectivo_tiles_buttons(filter: collectivo_tiles_buttons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tiles_buttons!]!
  collectivo_tiles_buttons_by_id(id: ID!, version: String): collectivo_tiles_buttons
  collectivo_tiles_buttons_aggregated(groupBy: [String], filter: collectivo_tiles_buttons_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectivo_tiles_buttons_aggregated!]!
  collectivo_tiles_buttons_by_version(version: String!, id: ID!): version_collectivo_tiles_buttons
  junction_directus_users_files(filter: junction_directus_users_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [junction_directus_users_files!]!
  junction_directus_users_files_by_id(id: ID!, version: String): junction_directus_users_files
  junction_directus_users_files_aggregated(groupBy: [String], filter: junction_directus_users_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [junction_directus_users_files_aggregated!]!
  junction_directus_users_files_by_version(version: String!, id: ID!): version_junction_directus_users_files
  memberships_coshoppers(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_coshoppers!]!
  memberships_coshoppers_by_id(id: ID!, version: String): memberships_coshoppers
  memberships_coshoppers_aggregated(groupBy: [String], filter: memberships_coshoppers_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [memberships_coshoppers_aggregated!]!
  memberships_coshoppers_by_version(version: String!, id: ID!): version_memberships_coshoppers
  memberships_memberships_coshoppers(filter: memberships_memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_memberships_coshoppers!]!
  memberships_memberships_coshoppers_by_id(id: ID!, version: String): memberships_memberships_coshoppers
  memberships_memberships_coshoppers_aggregated(groupBy: [String], filter: memberships_memberships_coshoppers_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [memberships_memberships_coshoppers_aggregated!]!
  memberships_memberships_coshoppers_by_version(version: String!, id: ID!): version_memberships_memberships_coshoppers
  memberships_memberships_coshoppers_1(filter: memberships_memberships_coshoppers_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_memberships_coshoppers_1!]!
  memberships_memberships_coshoppers_1_by_id(id: ID!, version: String): memberships_memberships_coshoppers_1
  memberships_memberships_coshoppers_1_aggregated(groupBy: [String], filter: memberships_memberships_coshoppers_1_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [memberships_memberships_coshoppers_1_aggregated!]!
  memberships_memberships_coshoppers_1_by_version(version: String!, id: ID!): version_memberships_memberships_coshoppers_1
  messages_templates(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_templates!]!
  messages_templates_by_id(id: ID!, version: String): messages_templates
  messages_templates_aggregated(groupBy: [String], filter: messages_templates_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [messages_templates_aggregated!]!
  messages_templates_by_version(version: String!, id: ID!): version_messages_templates
  messages_campaigns(filter: messages_campaigns_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_campaigns!]!
  messages_campaigns_by_id(id: ID!, version: String): messages_campaigns
  messages_campaigns_aggregated(groupBy: [String], filter: messages_campaigns_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [messages_campaigns_aggregated!]!
  messages_campaigns_by_version(version: String!, id: ID!): version_messages_campaigns
  messages_campaigns_directus_users(filter: messages_campaigns_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_campaigns_directus_users!]!
  messages_campaigns_directus_users_by_id(id: ID!, version: String): messages_campaigns_directus_users
  messages_campaigns_directus_users_aggregated(groupBy: [String], filter: messages_campaigns_directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [messages_campaigns_directus_users_aggregated!]!
  messages_campaigns_directus_users_by_version(version: String!, id: ID!): version_messages_campaigns_directus_users
  messages_designs(filter: messages_designs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_designs!]!
  messages_designs_by_id(id: ID!, version: String): messages_designs
  messages_designs_aggregated(groupBy: [String], filter: messages_designs_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [messages_designs_aggregated!]!
  messages_designs_by_version(version: String!, id: ID!): version_messages_designs
  messages_messages(filter: messages_messages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_messages!]!
  messages_messages_by_id(id: ID!, version: String): messages_messages
  messages_messages_aggregated(groupBy: [String], filter: messages_messages_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [messages_messages_aggregated!]!
  messages_messages_by_version(version: String!, id: ID!): version_messages_messages
  milaccess_log(filter: milaccess_log_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [milaccess_log!]!
  milaccess_log_by_id(id: ID!, version: String): milaccess_log
  milaccess_log_aggregated(groupBy: [String], filter: milaccess_log_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [milaccess_log_aggregated!]!
  milaccess_log_by_version(version: String!, id: ID!): version_milaccess_log
  mila_automations(filter: mila_automations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mila_automations!]!
  mila_automations_by_id(id: ID!, version: String): mila_automations
  mila_automations_aggregated(groupBy: [String], filter: mila_automations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [mila_automations_aggregated!]!
  mila_automations_by_version(version: String!, id: ID!): version_mila_automations
  payments_invoices_out(filter: payments_invoices_out_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [payments_invoices_out!]!
  payments_invoices_out_by_id(id: ID!, version: String): payments_invoices_out
  payments_invoices_out_aggregated(groupBy: [String], filter: payments_invoices_out_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [payments_invoices_out_aggregated!]!
  payments_invoices_out_by_version(version: String!, id: ID!): version_payments_invoices_out
  payments_invoices_entries(filter: payments_invoices_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [payments_invoices_entries!]!
  payments_invoices_entries_by_id(id: ID!, version: String): payments_invoices_entries
  payments_invoices_entries_aggregated(groupBy: [String], filter: payments_invoices_entries_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [payments_invoices_entries_aggregated!]!
  payments_invoices_entries_by_version(version: String!, id: ID!): version_payments_invoices_entries
  shifts_assignments(filter: shifts_assignments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_assignments!]!
  shifts_assignments_by_id(id: ID!, version: String): shifts_assignments
  shifts_assignments_aggregated(groupBy: [String], filter: shifts_assignments_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [shifts_assignments_aggregated!]!
  shifts_assignments_by_version(version: String!, id: ID!): version_shifts_assignments
  shifts_absences(filter: shifts_absences_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_absences!]!
  shifts_absences_by_id(id: ID!, version: String): shifts_absences
  shifts_absences_aggregated(groupBy: [String], filter: shifts_absences_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [shifts_absences_aggregated!]!
  shifts_absences_by_version(version: String!, id: ID!): version_shifts_absences
  shifts_logs(filter: shifts_logs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_logs!]!
  shifts_logs_by_id(id: ID!, version: String): shifts_logs
  shifts_logs_aggregated(groupBy: [String], filter: shifts_logs_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [shifts_logs_aggregated!]!
  shifts_logs_by_version(version: String!, id: ID!): version_shifts_logs
  shifts_holidays_public(filter: shifts_holidays_public_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_holidays_public!]!
  shifts_holidays_public_by_id(id: ID!, version: String): shifts_holidays_public
  shifts_holidays_public_aggregated(groupBy: [String], filter: shifts_holidays_public_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [shifts_holidays_public_aggregated!]!
  shifts_holidays_public_by_version(version: String!, id: ID!): version_shifts_holidays_public
  memberships(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships!]!
  memberships_by_id(id: ID!, version: String): memberships
  memberships_aggregated(groupBy: [String], filter: memberships_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [memberships_aggregated!]!
  memberships_by_version(version: String!, id: ID!): version_memberships
  memberships_shifts_categories(filter: memberships_shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_shifts_categories!]!
  memberships_shifts_categories_by_id(id: ID!, version: String): memberships_shifts_categories
  memberships_shifts_categories_aggregated(groupBy: [String], filter: memberships_shifts_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [memberships_shifts_categories_aggregated!]!
  memberships_shifts_categories_by_version(version: String!, id: ID!): version_memberships_shifts_categories
}

type Mutation {
  create_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  create_directus_sync_id_map_item(data: create_directus_sync_id_map_input!): directus_sync_id_map
  create_collectivo_tiles_items(filter: collectivo_tiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectivo_tiles_input!]): [collectivo_tiles!]!
  create_collectivo_tiles_item(data: create_collectivo_tiles_input!): collectivo_tiles
  create_shifts_shifts_items(filter: shifts_shifts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_shifts_shifts_input!]): [shifts_shifts!]!
  create_shifts_shifts_item(data: create_shifts_shifts_input!): shifts_shifts
  create_shifts_categories_items(filter: shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_shifts_categories_input!]): [shifts_categories!]!
  create_shifts_categories_item(data: create_shifts_categories_input!): shifts_categories
  create_collectivo_tags_items(filter: collectivo_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectivo_tags_input!]): [collectivo_tags!]!
  create_collectivo_tags_item(data: create_collectivo_tags_input!): collectivo_tags
  create_collectivo_tags_directus_users_items(filter: collectivo_tags_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectivo_tags_directus_users_input!]): [collectivo_tags_directus_users!]!
  create_collectivo_tags_directus_users_item(data: create_collectivo_tags_directus_users_input!): collectivo_tags_directus_users
  create_collectivo_tiles_buttons_items(filter: collectivo_tiles_buttons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectivo_tiles_buttons_input!]): [collectivo_tiles_buttons!]!
  create_collectivo_tiles_buttons_item(data: create_collectivo_tiles_buttons_input!): collectivo_tiles_buttons
  create_junction_directus_users_files_items(filter: junction_directus_users_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_junction_directus_users_files_input!]): [junction_directus_users_files!]!
  create_junction_directus_users_files_item(data: create_junction_directus_users_files_input!): junction_directus_users_files
  create_memberships_coshoppers_items(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_memberships_coshoppers_input!]): [memberships_coshoppers!]!
  create_memberships_coshoppers_item(data: create_memberships_coshoppers_input!): memberships_coshoppers
  create_memberships_memberships_coshoppers_items(filter: memberships_memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_memberships_memberships_coshoppers_input!]): [memberships_memberships_coshoppers!]!
  create_memberships_memberships_coshoppers_item(data: create_memberships_memberships_coshoppers_input!): memberships_memberships_coshoppers
  create_memberships_memberships_coshoppers_1_items(filter: memberships_memberships_coshoppers_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_memberships_memberships_coshoppers_1_input!]): [memberships_memberships_coshoppers_1!]!
  create_memberships_memberships_coshoppers_1_item(data: create_memberships_memberships_coshoppers_1_input!): memberships_memberships_coshoppers_1
  create_messages_templates_items(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_messages_templates_input!]): [messages_templates!]!
  create_messages_templates_item(data: create_messages_templates_input!): messages_templates
  create_messages_campaigns_items(filter: messages_campaigns_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_messages_campaigns_input!]): [messages_campaigns!]!
  create_messages_campaigns_item(data: create_messages_campaigns_input!): messages_campaigns
  create_messages_campaigns_directus_users_items(filter: messages_campaigns_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_messages_campaigns_directus_users_input!]): [messages_campaigns_directus_users!]!
  create_messages_campaigns_directus_users_item(data: create_messages_campaigns_directus_users_input!): messages_campaigns_directus_users
  create_messages_designs_items(filter: messages_designs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_messages_designs_input!]): [messages_designs!]!
  create_messages_designs_item(data: create_messages_designs_input!): messages_designs
  create_messages_messages_items(filter: messages_messages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_messages_messages_input!]): [messages_messages!]!
  create_messages_messages_item(data: create_messages_messages_input!): messages_messages
  create_milaccess_log_items(filter: milaccess_log_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_milaccess_log_input!]): [milaccess_log!]!
  create_milaccess_log_item(data: create_milaccess_log_input!): milaccess_log
  create_mila_automations_items(filter: mila_automations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_mila_automations_input!]): [mila_automations!]!
  create_mila_automations_item(data: create_mila_automations_input!): mila_automations
  create_payments_invoices_out_items(filter: payments_invoices_out_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_payments_invoices_out_input!]): [payments_invoices_out!]!
  create_payments_invoices_out_item(data: create_payments_invoices_out_input!): payments_invoices_out
  create_payments_invoices_entries_items(filter: payments_invoices_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_payments_invoices_entries_input!]): [payments_invoices_entries!]!
  create_payments_invoices_entries_item(data: create_payments_invoices_entries_input!): payments_invoices_entries
  create_shifts_assignments_items(filter: shifts_assignments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_shifts_assignments_input!]): [shifts_assignments!]!
  create_shifts_assignments_item(data: create_shifts_assignments_input!): shifts_assignments
  create_shifts_absences_items(filter: shifts_absences_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_shifts_absences_input!]): [shifts_absences!]!
  create_shifts_absences_item(data: create_shifts_absences_input!): shifts_absences
  create_shifts_logs_items(filter: shifts_logs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_shifts_logs_input!]): [shifts_logs!]!
  create_shifts_logs_item(data: create_shifts_logs_input!): shifts_logs
  create_shifts_holidays_public_items(filter: shifts_holidays_public_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_shifts_holidays_public_input!]): [shifts_holidays_public!]!
  create_shifts_holidays_public_item(data: create_shifts_holidays_public_input!): shifts_holidays_public
  create_memberships_items(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_memberships_input!]): [memberships!]!
  create_memberships_item(data: create_memberships_input!): memberships
  create_memberships_shifts_categories_items(filter: memberships_shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_memberships_shifts_categories_input!]): [memberships_shifts_categories!]!
  create_memberships_shifts_categories_item(data: create_memberships_shifts_categories_input!): memberships_shifts_categories
  update_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_sync_id_map_input!): [directus_sync_id_map!]!
  update_directus_sync_id_map_batch(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  update_directus_sync_id_map_item(id: ID!, data: update_directus_sync_id_map_input!): directus_sync_id_map
  update_collectivo_tiles_items(filter: collectivo_tiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectivo_tiles_input!): [collectivo_tiles!]!
  update_collectivo_tiles_batch(filter: collectivo_tiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectivo_tiles_input!]): [collectivo_tiles!]!
  update_collectivo_tiles_item(id: ID!, data: update_collectivo_tiles_input!): collectivo_tiles
  update_shifts_shifts_items(filter: shifts_shifts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_shifts_shifts_input!): [shifts_shifts!]!
  update_shifts_shifts_batch(filter: shifts_shifts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_shifts_shifts_input!]): [shifts_shifts!]!
  update_shifts_shifts_item(id: ID!, data: update_shifts_shifts_input!): shifts_shifts
  update_shifts_categories_items(filter: shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_shifts_categories_input!): [shifts_categories!]!
  update_shifts_categories_batch(filter: shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_shifts_categories_input!]): [shifts_categories!]!
  update_shifts_categories_item(id: ID!, data: update_shifts_categories_input!): shifts_categories
  update_collectivo_tags_items(filter: collectivo_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectivo_tags_input!): [collectivo_tags!]!
  update_collectivo_tags_batch(filter: collectivo_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectivo_tags_input!]): [collectivo_tags!]!
  update_collectivo_tags_item(id: ID!, data: update_collectivo_tags_input!): collectivo_tags
  update_collectivo_tags_directus_users_items(filter: collectivo_tags_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectivo_tags_directus_users_input!): [collectivo_tags_directus_users!]!
  update_collectivo_tags_directus_users_batch(filter: collectivo_tags_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectivo_tags_directus_users_input!]): [collectivo_tags_directus_users!]!
  update_collectivo_tags_directus_users_item(id: ID!, data: update_collectivo_tags_directus_users_input!): collectivo_tags_directus_users
  update_collectivo_tiles_buttons_items(filter: collectivo_tiles_buttons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectivo_tiles_buttons_input!): [collectivo_tiles_buttons!]!
  update_collectivo_tiles_buttons_batch(filter: collectivo_tiles_buttons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectivo_tiles_buttons_input!]): [collectivo_tiles_buttons!]!
  update_collectivo_tiles_buttons_item(id: ID!, data: update_collectivo_tiles_buttons_input!): collectivo_tiles_buttons
  update_junction_directus_users_files_items(filter: junction_directus_users_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_junction_directus_users_files_input!): [junction_directus_users_files!]!
  update_junction_directus_users_files_batch(filter: junction_directus_users_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_junction_directus_users_files_input!]): [junction_directus_users_files!]!
  update_junction_directus_users_files_item(id: ID!, data: update_junction_directus_users_files_input!): junction_directus_users_files
  update_memberships_coshoppers_items(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_memberships_coshoppers_input!): [memberships_coshoppers!]!
  update_memberships_coshoppers_batch(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_memberships_coshoppers_input!]): [memberships_coshoppers!]!
  update_memberships_coshoppers_item(id: ID!, data: update_memberships_coshoppers_input!): memberships_coshoppers
  update_memberships_memberships_coshoppers_items(filter: memberships_memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_memberships_memberships_coshoppers_input!): [memberships_memberships_coshoppers!]!
  update_memberships_memberships_coshoppers_batch(filter: memberships_memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_memberships_memberships_coshoppers_input!]): [memberships_memberships_coshoppers!]!
  update_memberships_memberships_coshoppers_item(id: ID!, data: update_memberships_memberships_coshoppers_input!): memberships_memberships_coshoppers
  update_memberships_memberships_coshoppers_1_items(filter: memberships_memberships_coshoppers_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_memberships_memberships_coshoppers_1_input!): [memberships_memberships_coshoppers_1!]!
  update_memberships_memberships_coshoppers_1_batch(filter: memberships_memberships_coshoppers_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_memberships_memberships_coshoppers_1_input!]): [memberships_memberships_coshoppers_1!]!
  update_memberships_memberships_coshoppers_1_item(id: ID!, data: update_memberships_memberships_coshoppers_1_input!): memberships_memberships_coshoppers_1
  update_messages_templates_items(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_messages_templates_input!): [messages_templates!]!
  update_messages_templates_batch(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_messages_templates_input!]): [messages_templates!]!
  update_messages_templates_item(id: ID!, data: update_messages_templates_input!): messages_templates
  update_messages_campaigns_items(filter: messages_campaigns_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_messages_campaigns_input!): [messages_campaigns!]!
  update_messages_campaigns_batch(filter: messages_campaigns_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_messages_campaigns_input!]): [messages_campaigns!]!
  update_messages_campaigns_item(id: ID!, data: update_messages_campaigns_input!): messages_campaigns
  update_messages_campaigns_directus_users_items(filter: messages_campaigns_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_messages_campaigns_directus_users_input!): [messages_campaigns_directus_users!]!
  update_messages_campaigns_directus_users_batch(filter: messages_campaigns_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_messages_campaigns_directus_users_input!]): [messages_campaigns_directus_users!]!
  update_messages_campaigns_directus_users_item(id: ID!, data: update_messages_campaigns_directus_users_input!): messages_campaigns_directus_users
  update_messages_designs_items(filter: messages_designs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_messages_designs_input!): [messages_designs!]!
  update_messages_designs_batch(filter: messages_designs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_messages_designs_input!]): [messages_designs!]!
  update_messages_designs_item(id: ID!, data: update_messages_designs_input!): messages_designs
  update_messages_messages_items(filter: messages_messages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_messages_messages_input!): [messages_messages!]!
  update_messages_messages_batch(filter: messages_messages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_messages_messages_input!]): [messages_messages!]!
  update_messages_messages_item(id: ID!, data: update_messages_messages_input!): messages_messages
  update_milaccess_log_items(filter: milaccess_log_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_milaccess_log_input!): [milaccess_log!]!
  update_milaccess_log_batch(filter: milaccess_log_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_milaccess_log_input!]): [milaccess_log!]!
  update_milaccess_log_item(id: ID!, data: update_milaccess_log_input!): milaccess_log
  update_mila_automations_items(filter: mila_automations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_mila_automations_input!): [mila_automations!]!
  update_mila_automations_batch(filter: mila_automations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_mila_automations_input!]): [mila_automations!]!
  update_mila_automations_item(id: ID!, data: update_mila_automations_input!): mila_automations
  update_payments_invoices_out_items(filter: payments_invoices_out_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_payments_invoices_out_input!): [payments_invoices_out!]!
  update_payments_invoices_out_batch(filter: payments_invoices_out_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_payments_invoices_out_input!]): [payments_invoices_out!]!
  update_payments_invoices_out_item(id: ID!, data: update_payments_invoices_out_input!): payments_invoices_out
  update_payments_invoices_entries_items(filter: payments_invoices_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_payments_invoices_entries_input!): [payments_invoices_entries!]!
  update_payments_invoices_entries_batch(filter: payments_invoices_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_payments_invoices_entries_input!]): [payments_invoices_entries!]!
  update_payments_invoices_entries_item(id: ID!, data: update_payments_invoices_entries_input!): payments_invoices_entries
  update_shifts_assignments_items(filter: shifts_assignments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_shifts_assignments_input!): [shifts_assignments!]!
  update_shifts_assignments_batch(filter: shifts_assignments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_shifts_assignments_input!]): [shifts_assignments!]!
  update_shifts_assignments_item(id: ID!, data: update_shifts_assignments_input!): shifts_assignments
  update_shifts_absences_items(filter: shifts_absences_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_shifts_absences_input!): [shifts_absences!]!
  update_shifts_absences_batch(filter: shifts_absences_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_shifts_absences_input!]): [shifts_absences!]!
  update_shifts_absences_item(id: ID!, data: update_shifts_absences_input!): shifts_absences
  update_shifts_logs_items(filter: shifts_logs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_shifts_logs_input!): [shifts_logs!]!
  update_shifts_logs_batch(filter: shifts_logs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_shifts_logs_input!]): [shifts_logs!]!
  update_shifts_logs_item(id: ID!, data: update_shifts_logs_input!): shifts_logs
  update_shifts_holidays_public_items(filter: shifts_holidays_public_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_shifts_holidays_public_input!): [shifts_holidays_public!]!
  update_shifts_holidays_public_batch(filter: shifts_holidays_public_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_shifts_holidays_public_input!]): [shifts_holidays_public!]!
  update_shifts_holidays_public_item(id: ID!, data: update_shifts_holidays_public_input!): shifts_holidays_public
  update_memberships_items(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_memberships_input!): [memberships!]!
  update_memberships_batch(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_memberships_input!]): [memberships!]!
  update_memberships_item(id: ID!, data: update_memberships_input!): memberships
  update_memberships_shifts_categories_items(filter: memberships_shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_memberships_shifts_categories_input!): [memberships_shifts_categories!]!
  update_memberships_shifts_categories_batch(filter: memberships_shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_memberships_shifts_categories_input!]): [memberships_shifts_categories!]!
  update_memberships_shifts_categories_item(id: ID!, data: update_memberships_shifts_categories_input!): memberships_shifts_categories
  delete_directus_sync_id_map_items(ids: [ID]!): delete_many
  delete_directus_sync_id_map_item(id: ID!): delete_one
  delete_collectivo_tiles_items(ids: [ID]!): delete_many
  delete_collectivo_tiles_item(id: ID!): delete_one
  delete_shifts_shifts_items(ids: [ID]!): delete_many
  delete_shifts_shifts_item(id: ID!): delete_one
  delete_shifts_categories_items(ids: [ID]!): delete_many
  delete_shifts_categories_item(id: ID!): delete_one
  delete_collectivo_tags_items(ids: [ID]!): delete_many
  delete_collectivo_tags_item(id: ID!): delete_one
  delete_collectivo_tags_directus_users_items(ids: [ID]!): delete_many
  delete_collectivo_tags_directus_users_item(id: ID!): delete_one
  delete_collectivo_tiles_buttons_items(ids: [ID]!): delete_many
  delete_collectivo_tiles_buttons_item(id: ID!): delete_one
  delete_junction_directus_users_files_items(ids: [ID]!): delete_many
  delete_junction_directus_users_files_item(id: ID!): delete_one
  delete_memberships_coshoppers_items(ids: [ID]!): delete_many
  delete_memberships_coshoppers_item(id: ID!): delete_one
  delete_memberships_memberships_coshoppers_items(ids: [ID]!): delete_many
  delete_memberships_memberships_coshoppers_item(id: ID!): delete_one
  delete_memberships_memberships_coshoppers_1_items(ids: [ID]!): delete_many
  delete_memberships_memberships_coshoppers_1_item(id: ID!): delete_one
  delete_messages_templates_items(ids: [ID]!): delete_many
  delete_messages_templates_item(id: ID!): delete_one
  delete_messages_campaigns_items(ids: [ID]!): delete_many
  delete_messages_campaigns_item(id: ID!): delete_one
  delete_messages_campaigns_directus_users_items(ids: [ID]!): delete_many
  delete_messages_campaigns_directus_users_item(id: ID!): delete_one
  delete_messages_designs_items(ids: [ID]!): delete_many
  delete_messages_designs_item(id: ID!): delete_one
  delete_messages_messages_items(ids: [ID]!): delete_many
  delete_messages_messages_item(id: ID!): delete_one
  delete_milaccess_log_items(ids: [ID]!): delete_many
  delete_milaccess_log_item(id: ID!): delete_one
  delete_mila_automations_items(ids: [ID]!): delete_many
  delete_mila_automations_item(id: ID!): delete_one
  delete_payments_invoices_out_items(ids: [ID]!): delete_many
  delete_payments_invoices_out_item(id: ID!): delete_one
  delete_payments_invoices_entries_items(ids: [ID]!): delete_many
  delete_payments_invoices_entries_item(id: ID!): delete_one
  delete_shifts_assignments_items(ids: [ID]!): delete_many
  delete_shifts_assignments_item(id: ID!): delete_one
  delete_shifts_absences_items(ids: [ID]!): delete_many
  delete_shifts_absences_item(id: ID!): delete_one
  delete_shifts_logs_items(ids: [ID]!): delete_many
  delete_shifts_logs_item(id: ID!): delete_one
  delete_shifts_holidays_public_items(ids: [ID]!): delete_many
  delete_shifts_holidays_public_item(id: ID!): delete_one
  delete_memberships_items(ids: [ID]!): delete_many
  delete_memberships_item(id: ID!): delete_one
  delete_memberships_shifts_categories_items(ids: [ID]!): delete_many
  delete_memberships_shifts_categories_item(id: ID!): delete_one
}

type Subscription {
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  collectivo_tiles_mutated(event: EventEnum): collectivo_tiles_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  shifts_shifts_mutated(event: EventEnum): shifts_shifts_mutated
  shifts_categories_mutated(event: EventEnum): shifts_categories_mutated
  collectivo_tags_mutated(event: EventEnum): collectivo_tags_mutated
  collectivo_tags_directus_users_mutated(event: EventEnum): collectivo_tags_directus_users_mutated
  collectivo_tiles_buttons_mutated(event: EventEnum): collectivo_tiles_buttons_mutated
  junction_directus_users_files_mutated(event: EventEnum): junction_directus_users_files_mutated
  memberships_coshoppers_mutated(event: EventEnum): memberships_coshoppers_mutated
  memberships_memberships_coshoppers_mutated(event: EventEnum): memberships_memberships_coshoppers_mutated
  memberships_memberships_coshoppers_1_mutated(event: EventEnum): memberships_memberships_coshoppers_1_mutated
  messages_templates_mutated(event: EventEnum): messages_templates_mutated
  messages_campaigns_mutated(event: EventEnum): messages_campaigns_mutated
  messages_campaigns_directus_users_mutated(event: EventEnum): messages_campaigns_directus_users_mutated
  messages_designs_mutated(event: EventEnum): messages_designs_mutated
  messages_messages_mutated(event: EventEnum): messages_messages_mutated
  milaccess_log_mutated(event: EventEnum): milaccess_log_mutated
  mila_automations_mutated(event: EventEnum): mila_automations_mutated
  payments_invoices_out_mutated(event: EventEnum): payments_invoices_out_mutated
  payments_invoices_entries_mutated(event: EventEnum): payments_invoices_entries_mutated
  shifts_assignments_mutated(event: EventEnum): shifts_assignments_mutated
  shifts_absences_mutated(event: EventEnum): shifts_absences_mutated
  shifts_logs_mutated(event: EventEnum): shifts_logs_mutated
  shifts_holidays_public_mutated(event: EventEnum): shifts_holidays_public_mutated
  memberships_mutated(event: EventEnum): memberships_mutated
  memberships_shifts_categories_mutated(event: EventEnum): memberships_shifts_categories_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

enum EventEnum {
  create
  update
  delete
}

type collectivo_tags {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  tags_description: String
  tags_name: String!
  tags_sync: Boolean
  user_created: String
  user_updated: String
  tags_users(filter: collectivo_tags_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tags_directus_users]
  tags_users_func: count_functions
}

type collectivo_tags_aggregated {
  group: JSON
  countAll: Int
  count: collectivo_tags_aggregated_count
  countDistinct: collectivo_tags_aggregated_count
  avg: collectivo_tags_aggregated_fields
  sum: collectivo_tags_aggregated_fields
  avgDistinct: collectivo_tags_aggregated_fields
  sumDistinct: collectivo_tags_aggregated_fields
  min: collectivo_tags_aggregated_fields
  max: collectivo_tags_aggregated_fields
}

type collectivo_tags_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  tags_description: Int
  tags_name: Int
  tags_sync: Int
  user_created: Int
  user_updated: Int
  tags_users: Int
}

type collectivo_tags_aggregated_fields {
  id: Float
}

type collectivo_tags_directus_users {
  collectivo_tags_id(filter: collectivo_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectivo_tags
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type collectivo_tags_directus_users_aggregated {
  group: JSON
  countAll: Int
  count: collectivo_tags_directus_users_aggregated_count
  countDistinct: collectivo_tags_directus_users_aggregated_count
  avg: collectivo_tags_directus_users_aggregated_fields
  sum: collectivo_tags_directus_users_aggregated_fields
  avgDistinct: collectivo_tags_directus_users_aggregated_fields
  sumDistinct: collectivo_tags_directus_users_aggregated_fields
  min: collectivo_tags_directus_users_aggregated_fields
  max: collectivo_tags_directus_users_aggregated_fields
}

type collectivo_tags_directus_users_aggregated_count {
  collectivo_tags_id: Int
  directus_users_id: Int
  id: Int
}

type collectivo_tags_directus_users_aggregated_fields {
  collectivo_tags_id: Float
  id: Float
}

type collectivo_tags_directus_users_mutated {
  key: ID!
  event: EventEnum
  data: collectivo_tags_directus_users
}

type collectivo_tags_mutated {
  key: ID!
  event: EventEnum
  data: collectivo_tags
}

type collectivo_tiles {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  sort: Int
  tiles_color: String
  tiles_content: String
  tiles_name: String!
  tiles_tag_required(filter: collectivo_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectivo_tags
  user_created: String
  user_updated: String
  tiles_view_for: String
  tiles_buttons(filter: collectivo_tiles_buttons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tiles_buttons]
  tiles_buttons_func: count_functions
}

type collectivo_tiles_aggregated {
  group: JSON
  countAll: Int
  count: collectivo_tiles_aggregated_count
  countDistinct: collectivo_tiles_aggregated_count
  avg: collectivo_tiles_aggregated_fields
  sum: collectivo_tiles_aggregated_fields
  avgDistinct: collectivo_tiles_aggregated_fields
  sumDistinct: collectivo_tiles_aggregated_fields
  min: collectivo_tiles_aggregated_fields
  max: collectivo_tiles_aggregated_fields
}

type collectivo_tiles_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  sort: Int
  tiles_color: Int
  tiles_content: Int
  tiles_name: Int

  """Nur Personen mit diesem Tag sehen diese Kachel"""
  tiles_tag_required: Int
  user_created: Int
  user_updated: Int
  tiles_view_for: Int
  tiles_buttons: Int
}

type collectivo_tiles_aggregated_fields {
  id: Float
  sort: Float

  """Nur Personen mit diesem Tag sehen diese Kachel"""
  tiles_tag_required: Float
}

type collectivo_tiles_buttons {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  sort: Int
  tiles_is_external: Boolean
  tiles_label: String
  tiles_path: String
  tiles_tile(filter: collectivo_tiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectivo_tiles
  user_created: String
  user_updated: String
}

type collectivo_tiles_buttons_aggregated {
  group: JSON
  countAll: Int
  count: collectivo_tiles_buttons_aggregated_count
  countDistinct: collectivo_tiles_buttons_aggregated_count
  avg: collectivo_tiles_buttons_aggregated_fields
  sum: collectivo_tiles_buttons_aggregated_fields
  avgDistinct: collectivo_tiles_buttons_aggregated_fields
  sumDistinct: collectivo_tiles_buttons_aggregated_fields
  min: collectivo_tiles_buttons_aggregated_fields
  max: collectivo_tiles_buttons_aggregated_fields
}

type collectivo_tiles_buttons_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  sort: Int
  tiles_is_external: Int
  tiles_label: Int
  tiles_path: Int
  tiles_tile: Int
  user_created: Int
  user_updated: Int
}

type collectivo_tiles_buttons_aggregated_fields {
  id: Float
  sort: Float
  tiles_tile: Float
}

type collectivo_tiles_buttons_mutated {
  key: ID!
  event: EventEnum
  data: collectivo_tiles_buttons
}

type collectivo_tiles_mutated {
  key: ID!
  event: EventEnum
  data: collectivo_tiles
}

type count_functions {
  count: Int
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type directus_access {
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
  sort: Int
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  action: String!
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  timestamp: Date
  timestamp_func: datetime_functions
  ip: String
  user_agent: String
  collection: String!
  item: String!
  comment: String
  origin: String
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_dashboards {
  id: ID!
  name: String!
  icon: String
  note: String
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  color: String
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  created_on: Date
  created_on_func: datetime_functions
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  tus_data_func: count_functions
  uploaded_on: Date
  uploaded_on_func: datetime_functions
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  id: ID!
  name: String!
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  options_func: count_functions
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  id: ID!
  name: String!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  timestamp: Date
  timestamp_func: datetime_functions
  status: String
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  subject: String!
  message: String
  collection: String
  item: String
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  id: ID!
  name: String
  key: String!
  type: String!
  position_x: Int!
  position_y: Int!
  options: JSON
  options_func: count_functions
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  options_func: count_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  permissions_func: count_functions
  validation: JSON
  validation_func: count_functions
  presets: JSON
  presets_func: count_functions
  fields: [String]
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  id: ID!
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  id: ID!
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_query_func: count_functions
  layout_options: JSON
  layout_options_func: count_functions
  refresh_interval: Int
  filter: JSON
  filter_func: count_functions
  icon: String
  color: String
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_revisions {
  id: ID!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  collection: String!
  item: String!
  data: JSON
  data_func: count_functions
  delta: JSON
  delta_func: count_functions
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  id: ID!
  name: String!
  icon: String
  description: String
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  id: ID!
  project_name: String
  project_url: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_note: String
  auth_login_attempts: Int
  auth_password_policy: String
  storage_asset_transform: String
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  custom_css: String
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  basemaps: JSON
  basemaps_func: count_functions
  mapbox_key: String
  module_bar: JSON
  module_bar_func: count_functions
  project_descriptor: String
  default_language: String
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  default_appearance: String
  default_theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  default_theme_dark: String
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  report_error_url: String
  report_bug_url: String
  report_feature_url: String

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!

  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  id: ID!
  name: String
  collection: String!
  item: String!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_aggregated {
  group: JSON
  countAll: Int
  count: directus_sync_id_map_aggregated_count
  countDistinct: directus_sync_id_map_aggregated_count
  avg: directus_sync_id_map_aggregated_fields
  sum: directus_sync_id_map_aggregated_fields
  avgDistinct: directus_sync_id_map_aggregated_fields
  sumDistinct: directus_sync_id_map_aggregated_fields
  min: directus_sync_id_map_aggregated_fields
  max: directus_sync_id_map_aggregated_fields
}

type directus_sync_id_map_aggregated_count {
  id: Int
  table: Int
  sync_id: Int
  local_id: Int
  created_at: Int
}

type directus_sync_id_map_aggregated_fields {
  id: Float
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  id: ID!
  language: String!
  key: String!
  value: String!
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  id: ID!
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  tags_func: count_functions
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  language: String
  tfa_secret: Hash
  status: String
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  token: Hash
  last_access: Date
  last_access_func: datetime_functions
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  auth_data_func: count_functions
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  lotzapp_id: String
  memberships_birthday: Date
  memberships_birthday_func: date_functions
  memberships_city: String
  memberships_country: String
  memberships_door: String
  memberships_gender: String
  memberships_occupation: String
  memberships_organization_id: String
  memberships_organization_name: String
  memberships_organization_type: String
  memberships_person_type: String
  memberships_phone: String
  memberships_postcode: String
  memberships_stair: String
  memberships_street: String
  memberships_streetnumber: String
  mila_pr_approved: Boolean
  mila_survey_contact: String
  mila_survey_motivation: String
  payments_account_iban: String
  payments_account_owner: String
  payments_type: String
  mila_groups_interested_2: String
  mila_skills_2: String
  survey_languages: String
  survey_languages_additional: String
  hide_name: Boolean
  memberships(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships]
  memberships_func: count_functions
  mila_documents(filter: junction_directus_users_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [junction_directus_users_files]
  mila_documents_func: count_functions
  collectivo_tags(filter: collectivo_tags_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectivo_tags_directus_users]
  collectivo_tags_func: count_functions
  messages_campaigns(filter: messages_campaigns_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_campaigns_directus_users]
  messages_campaigns_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  id: ID!
  key: String!
  name: String
  collection: String!
  item: String!
  hash: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  id: ID!
  name: String!
  method: String
  url: String!
  status: String
  data: Boolean
  actions: [String]!
  collections: [String]!
  headers: JSON
  headers_func: count_functions
  was_active_before_deprecation: Boolean!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type junction_directus_users_files {
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type junction_directus_users_files_aggregated {
  group: JSON
  countAll: Int
  count: junction_directus_users_files_aggregated_count
  countDistinct: junction_directus_users_files_aggregated_count
  avg: junction_directus_users_files_aggregated_fields
  sum: junction_directus_users_files_aggregated_fields
  avgDistinct: junction_directus_users_files_aggregated_fields
  sumDistinct: junction_directus_users_files_aggregated_fields
  min: junction_directus_users_files_aggregated_fields
  max: junction_directus_users_files_aggregated_fields
}

type junction_directus_users_files_aggregated_count {
  directus_files_id: Int
  directus_users_id: Int
  id: Int
}

type junction_directus_users_files_aggregated_fields {
  id: Float
}

type junction_directus_users_files_mutated {
  key: ID!
  event: EventEnum
  data: junction_directus_users_files
}

type memberships {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions

  """Diese Nummer identifiziert das Mitglied"""
  id: ID!

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  memberships_card_id: String
  memberships_date_applied: Date
  memberships_date_applied_func: date_functions
  memberships_date_approved: Date
  memberships_date_approved_func: date_functions
  memberships_date_cancelled: Date
  memberships_date_cancelled_func: date_functions
  memberships_date_ended: Date
  memberships_date_ended_func: date_functions
  memberships_date_excluded: Date
  memberships_date_excluded_func: date_functions

  """Änderung generiert automatische Rechnung"""
  memberships_shares: Int

  """Lebenszyklus von Beitritt bis Beendet"""
  memberships_status: String
  memberships_type: String
  memberships_user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  memberships_user_search: String

  """Wenn negativ, dann müssen Schichten nachgeholt werden"""
  shifts_counter: Int
  shifts_orientation_date: Date
  shifts_orientation_date_func: date_functions

  """Welche Art von Schichten macht dieses Mitglied?"""
  shifts_user_type: String
  user_created: String
  user_updated: String
  shifts_can_be_coordinator: Boolean
  coshoppers(filter: memberships_memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_memberships_coshoppers]
  coshoppers_func: count_functions
  kids(filter: memberships_memberships_coshoppers_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_memberships_coshoppers_1]
  kids_func: count_functions
  memberships_invoices(filter: payments_invoices_out_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [payments_invoices_out]
  memberships_invoices_func: count_functions
  shifts_categories_allowed(filter: memberships_shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [memberships_shifts_categories]
  shifts_categories_allowed_func: count_functions
}

type memberships_aggregated {
  group: JSON
  countAll: Int
  count: memberships_aggregated_count
  countDistinct: memberships_aggregated_count
  avg: memberships_aggregated_fields
  sum: memberships_aggregated_fields
  avgDistinct: memberships_aggregated_fields
  sumDistinct: memberships_aggregated_fields
  min: memberships_aggregated_fields
  max: memberships_aggregated_fields
}

type memberships_aggregated_count {
  date_created: Int
  date_updated: Int

  """Diese Nummer identifiziert das Mitglied"""
  id: Int

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  memberships_card_id: Int
  memberships_date_applied: Int
  memberships_date_approved: Int
  memberships_date_cancelled: Int
  memberships_date_ended: Int
  memberships_date_excluded: Int

  """Änderung generiert automatische Rechnung"""
  memberships_shares: Int

  """Lebenszyklus von Beitritt bis Beendet"""
  memberships_status: Int
  memberships_type: Int

  """Verknüpfter Account"""
  memberships_user: Int
  memberships_user_search: Int

  """Wenn negativ, dann müssen Schichten nachgeholt werden"""
  shifts_counter: Int
  shifts_orientation_date: Int

  """Welche Art von Schichten macht dieses Mitglied?"""
  shifts_user_type: Int
  user_created: Int
  user_updated: Int
  shifts_can_be_coordinator: Int
  coshoppers: Int
  kids: Int

  """Rechnungen für Anteils-Zahlungen"""
  memberships_invoices: Int

  """
  Für folgende Schichtkategorien darf sich diese Person selbstständig eintragen.
  """
  shifts_categories_allowed: Int
}

type memberships_aggregated_fields {
  """Diese Nummer identifiziert das Mitglied"""
  id: Float

  """Änderung generiert automatische Rechnung"""
  memberships_shares: Float

  """Wenn negativ, dann müssen Schichten nachgeholt werden"""
  shifts_counter: Float
}

type memberships_coshoppers {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  first_name: String!
  id: ID!
  last_name: String!

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  membership_card_id: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type memberships_coshoppers_aggregated {
  group: JSON
  countAll: Int
  count: memberships_coshoppers_aggregated_count
  countDistinct: memberships_coshoppers_aggregated_count
  avg: memberships_coshoppers_aggregated_fields
  sum: memberships_coshoppers_aggregated_fields
  avgDistinct: memberships_coshoppers_aggregated_fields
  sumDistinct: memberships_coshoppers_aggregated_fields
  min: memberships_coshoppers_aggregated_fields
  max: memberships_coshoppers_aggregated_fields
}

type memberships_coshoppers_aggregated_count {
  date_created: Int
  date_updated: Int
  first_name: Int
  id: Int
  last_name: Int

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  membership_card_id: Int
  user_created: Int
  user_updated: Int
}

type memberships_coshoppers_aggregated_fields {
  id: Float
}

type memberships_coshoppers_mutated {
  key: ID!
  event: EventEnum
  data: memberships_coshoppers
}

type memberships_memberships_coshoppers {
  id: ID!
  memberships_coshoppers_id(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships_coshoppers
  memberships_id(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
}

type memberships_memberships_coshoppers_1 {
  id: ID!
  memberships_coshoppers_id(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships_coshoppers
  memberships_id(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
}

type memberships_memberships_coshoppers_1_aggregated {
  group: JSON
  countAll: Int
  count: memberships_memberships_coshoppers_1_aggregated_count
  countDistinct: memberships_memberships_coshoppers_1_aggregated_count
  avg: memberships_memberships_coshoppers_1_aggregated_fields
  sum: memberships_memberships_coshoppers_1_aggregated_fields
  avgDistinct: memberships_memberships_coshoppers_1_aggregated_fields
  sumDistinct: memberships_memberships_coshoppers_1_aggregated_fields
  min: memberships_memberships_coshoppers_1_aggregated_fields
  max: memberships_memberships_coshoppers_1_aggregated_fields
}

type memberships_memberships_coshoppers_1_aggregated_count {
  id: Int
  memberships_coshoppers_id: Int
  memberships_id: Int
}

type memberships_memberships_coshoppers_1_aggregated_fields {
  id: Float
  memberships_coshoppers_id: Float
  memberships_id: Float
}

type memberships_memberships_coshoppers_1_mutated {
  key: ID!
  event: EventEnum
  data: memberships_memberships_coshoppers_1
}

type memberships_memberships_coshoppers_aggregated {
  group: JSON
  countAll: Int
  count: memberships_memberships_coshoppers_aggregated_count
  countDistinct: memberships_memberships_coshoppers_aggregated_count
  avg: memberships_memberships_coshoppers_aggregated_fields
  sum: memberships_memberships_coshoppers_aggregated_fields
  avgDistinct: memberships_memberships_coshoppers_aggregated_fields
  sumDistinct: memberships_memberships_coshoppers_aggregated_fields
  min: memberships_memberships_coshoppers_aggregated_fields
  max: memberships_memberships_coshoppers_aggregated_fields
}

type memberships_memberships_coshoppers_aggregated_count {
  id: Int
  memberships_coshoppers_id: Int
  memberships_id: Int
}

type memberships_memberships_coshoppers_aggregated_fields {
  id: Float
  memberships_coshoppers_id: Float
  memberships_id: Float
}

type memberships_memberships_coshoppers_mutated {
  key: ID!
  event: EventEnum
  data: memberships_memberships_coshoppers
}

type memberships_mutated {
  key: ID!
  event: EventEnum
  data: memberships
}

type memberships_shifts_categories {
  id: ID!
  memberships_id(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
  shifts_categories_id(filter: shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): shifts_categories
}

type memberships_shifts_categories_aggregated {
  group: JSON
  countAll: Int
  count: memberships_shifts_categories_aggregated_count
  countDistinct: memberships_shifts_categories_aggregated_count
  avg: memberships_shifts_categories_aggregated_fields
  sum: memberships_shifts_categories_aggregated_fields
  avgDistinct: memberships_shifts_categories_aggregated_fields
  sumDistinct: memberships_shifts_categories_aggregated_fields
  min: memberships_shifts_categories_aggregated_fields
  max: memberships_shifts_categories_aggregated_fields
}

type memberships_shifts_categories_aggregated_count {
  id: Int
  memberships_id: Int
  shifts_categories_id: Int
}

type memberships_shifts_categories_aggregated_fields {
  id: Float
  memberships_id: Float
  shifts_categories_id: Float
}

type memberships_shifts_categories_mutated {
  key: ID!
  event: EventEnum
  data: memberships_shifts_categories
}

type messages_campaigns {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  messages_campaign_status: String
  messages_context: JSON
  messages_context_func: count_functions
  messages_template(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): messages_templates
  user_created: String
  user_updated: String
  messages_recipients(filter: messages_campaigns_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [messages_campaigns_directus_users]
  messages_recipients_func: count_functions
}

type messages_campaigns_aggregated {
  group: JSON
  countAll: Int
  count: messages_campaigns_aggregated_count
  countDistinct: messages_campaigns_aggregated_count
  avg: messages_campaigns_aggregated_fields
  sum: messages_campaigns_aggregated_fields
  avgDistinct: messages_campaigns_aggregated_fields
  sumDistinct: messages_campaigns_aggregated_fields
  min: messages_campaigns_aggregated_fields
  max: messages_campaigns_aggregated_fields
}

type messages_campaigns_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  messages_campaign_status: Int
  messages_context: Int
  messages_template: Int
  user_created: Int
  user_updated: Int
  messages_recipients: Int
}

type messages_campaigns_aggregated_fields {
  id: Float
  messages_template: Float
}

type messages_campaigns_directus_users {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  messages_campaigns_id(filter: messages_campaigns_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): messages_campaigns
}

type messages_campaigns_directus_users_aggregated {
  group: JSON
  countAll: Int
  count: messages_campaigns_directus_users_aggregated_count
  countDistinct: messages_campaigns_directus_users_aggregated_count
  avg: messages_campaigns_directus_users_aggregated_fields
  sum: messages_campaigns_directus_users_aggregated_fields
  avgDistinct: messages_campaigns_directus_users_aggregated_fields
  sumDistinct: messages_campaigns_directus_users_aggregated_fields
  min: messages_campaigns_directus_users_aggregated_fields
  max: messages_campaigns_directus_users_aggregated_fields
}

type messages_campaigns_directus_users_aggregated_count {
  directus_users_id: Int
  id: Int
  messages_campaigns_id: Int
}

type messages_campaigns_directus_users_aggregated_fields {
  id: Float
  messages_campaigns_id: Float
}

type messages_campaigns_directus_users_mutated {
  key: ID!
  event: EventEnum
  data: messages_campaigns_directus_users
}

type messages_campaigns_mutated {
  key: ID!
  event: EventEnum
  data: messages_campaigns
}

type messages_designs {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!

  """Add {{content}} where the template should be inserted"""
  messages_design_html: String!
  messages_design_name: String!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type messages_designs_aggregated {
  group: JSON
  countAll: Int
  count: messages_designs_aggregated_count
  countDistinct: messages_designs_aggregated_count
  avg: messages_designs_aggregated_fields
  sum: messages_designs_aggregated_fields
  avgDistinct: messages_designs_aggregated_fields
  sumDistinct: messages_designs_aggregated_fields
  min: messages_designs_aggregated_fields
  max: messages_designs_aggregated_fields
}

type messages_designs_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int

  """Add {{content}} where the template should be inserted"""
  messages_design_html: Int
  messages_design_name: Int
  user_created: Int
  user_updated: Int
}

type messages_designs_aggregated_fields {
  id: Float
}

type messages_designs_mutated {
  key: ID!
  event: EventEnum
  data: messages_designs
}

type messages_messages {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  messages_campaign(filter: messages_campaigns_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): messages_campaigns
  messages_message_status: String
  messages_recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  messages_template(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): messages_templates
  user_created: String
  user_updated: String
}

type messages_messages_aggregated {
  group: JSON
  countAll: Int
  count: messages_messages_aggregated_count
  countDistinct: messages_messages_aggregated_count
  avg: messages_messages_aggregated_fields
  sum: messages_messages_aggregated_fields
  avgDistinct: messages_messages_aggregated_fields
  sumDistinct: messages_messages_aggregated_fields
  min: messages_messages_aggregated_fields
  max: messages_messages_aggregated_fields
}

type messages_messages_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  messages_campaign: Int
  messages_message_status: Int
  messages_recipient: Int
  messages_template: Int
  user_created: Int
  user_updated: Int
}

type messages_messages_aggregated_fields {
  id: Float
  messages_campaign: Float
  messages_template: Float
}

type messages_messages_mutated {
  key: ID!
  event: EventEnum
  data: messages_messages
}

type messages_templates {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!

  """
  Verwende {{recipient_first_name}} {{recipient_last_name}} um Vor- und Nachnamen automatisch einzufügen.
  """
  messages_content: String
  messages_design(filter: messages_designs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): messages_designs

  """The method that should be used to deliver the message."""
  messages_method: String
  messages_name: String!
  messages_subject: String
  user_created: String
  user_updated: String
}

type messages_templates_aggregated {
  group: JSON
  countAll: Int
  count: messages_templates_aggregated_count
  countDistinct: messages_templates_aggregated_count
  avg: messages_templates_aggregated_fields
  sum: messages_templates_aggregated_fields
  avgDistinct: messages_templates_aggregated_fields
  sumDistinct: messages_templates_aggregated_fields
  min: messages_templates_aggregated_fields
  max: messages_templates_aggregated_fields
}

type messages_templates_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int

  """
  Verwende {{recipient_first_name}} {{recipient_last_name}} um Vor- und Nachnamen automatisch einzufügen.
  """
  messages_content: Int
  messages_design: Int

  """The method that should be used to deliver the message."""
  messages_method: Int
  messages_name: Int
  messages_subject: Int
  user_created: Int
  user_updated: Int
}

type messages_templates_aggregated_fields {
  id: Float
  messages_design: Float
}

type messages_templates_mutated {
  key: ID!
  event: EventEnum
  data: messages_templates
}

type mila_automations {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  mila_active: Boolean
  mila_key: String!
  mila_label: String
  mila_template(filter: messages_templates_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): messages_templates
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type mila_automations_aggregated {
  group: JSON
  countAll: Int
  count: mila_automations_aggregated_count
  countDistinct: mila_automations_aggregated_count
  avg: mila_automations_aggregated_fields
  sum: mila_automations_aggregated_fields
  avgDistinct: mila_automations_aggregated_fields
  sumDistinct: mila_automations_aggregated_fields
  min: mila_automations_aggregated_fields
  max: mila_automations_aggregated_fields
}

type mila_automations_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  mila_active: Int
  mila_key: Int
  mila_label: Int
  mila_template: Int
  user_created: Int
  user_updated: Int
}

type mila_automations_aggregated_fields {
  id: Float
  mila_template: Float
}

type mila_automations_mutated {
  key: ID!
  event: EventEnum
  data: mila_automations
}

type milaccess_log {
  coshopper(filter: memberships_coshoppers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships_coshoppers
  date: Date
  date_func: date_functions
  id: ID!
  membership(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
}

type milaccess_log_aggregated {
  group: JSON
  countAll: Int
  count: milaccess_log_aggregated_count
  countDistinct: milaccess_log_aggregated_count
  avg: milaccess_log_aggregated_fields
  sum: milaccess_log_aggregated_fields
  avgDistinct: milaccess_log_aggregated_fields
  sumDistinct: milaccess_log_aggregated_fields
  min: milaccess_log_aggregated_fields
  max: milaccess_log_aggregated_fields
}

type milaccess_log_aggregated_count {
  coshopper: Int
  date: Int
  id: Int
  membership: Int
}

type milaccess_log_aggregated_fields {
  coshopper: Float
  id: Float
  membership: Float
}

type milaccess_log_mutated {
  key: ID!
  event: EventEnum
  data: milaccess_log
}

type payments_invoices_entries {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  payments_description: String
  payments_invoice(filter: payments_invoices_out_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): payments_invoices_out

  """Price is in cents."""
  payments_price: Int
  payments_quantity: Int
  user_created: String
  user_updated: String
}

type payments_invoices_entries_aggregated {
  group: JSON
  countAll: Int
  count: payments_invoices_entries_aggregated_count
  countDistinct: payments_invoices_entries_aggregated_count
  avg: payments_invoices_entries_aggregated_fields
  sum: payments_invoices_entries_aggregated_fields
  avgDistinct: payments_invoices_entries_aggregated_fields
  sumDistinct: payments_invoices_entries_aggregated_fields
  min: payments_invoices_entries_aggregated_fields
  max: payments_invoices_entries_aggregated_fields
}

type payments_invoices_entries_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  payments_description: Int
  payments_invoice: Int

  """Price is in cents."""
  payments_price: Int
  payments_quantity: Int
  user_created: Int
  user_updated: Int
}

type payments_invoices_entries_aggregated_fields {
  id: Float
  payments_invoice: Float

  """Price is in cents."""
  payments_price: Float
  payments_quantity: Float
}

type payments_invoices_entries_mutated {
  key: ID!
  event: EventEnum
  data: payments_invoices_entries
}

type payments_invoices_out {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  lotzapp_id: String
  memberships_membership(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
  payments_date_issued: Date
  payments_date_issued_func: date_functions
  payments_date_paid: Date
  payments_date_paid_func: date_functions
  payments_notes: String
  payments_recipient_user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  payments_status: String
  user_created: String
  user_updated: String
  payments_entries(filter: payments_invoices_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [payments_invoices_entries]
  payments_entries_func: count_functions
}

type payments_invoices_out_aggregated {
  group: JSON
  countAll: Int
  count: payments_invoices_out_aggregated_count
  countDistinct: payments_invoices_out_aggregated_count
  avg: payments_invoices_out_aggregated_fields
  sum: payments_invoices_out_aggregated_fields
  avgDistinct: payments_invoices_out_aggregated_fields
  sumDistinct: payments_invoices_out_aggregated_fields
  min: payments_invoices_out_aggregated_fields
  max: payments_invoices_out_aggregated_fields
}

type payments_invoices_out_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  lotzapp_id: Int
  memberships_membership: Int
  payments_date_issued: Int
  payments_date_paid: Int
  payments_notes: Int
  payments_recipient_user: Int
  payments_status: Int
  user_created: Int
  user_updated: Int
  payments_entries: Int
}

type payments_invoices_out_aggregated_fields {
  id: Float
  memberships_membership: Float
}

type payments_invoices_out_mutated {
  key: ID!
  event: EventEnum
  data: payments_invoices_out
}

type shifts_absences {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  shifts_assignment(filter: shifts_assignments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): shifts_assignments
  shifts_from: Date!
  shifts_from_func: date_functions

  """Eine allgemeine Abwesenheit gilt für alle Anmeldungen des Mitglieds"""
  shifts_is_for_all_assignments: Boolean

  """
  Während einem Urlaub ist kein Einkauf möglich und es werden keine Schichtpunkte abgezogen.
  """
  shifts_is_holiday: Boolean!
  shifts_membership(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships

  """Nur angenommene Urlaube werden im Schichtkalender aktiv."""
  shifts_status: String
  shifts_to: Date!
  shifts_to_func: date_functions
  user_created: String
  user_updated: String
}

type shifts_absences_aggregated {
  group: JSON
  countAll: Int
  count: shifts_absences_aggregated_count
  countDistinct: shifts_absences_aggregated_count
  avg: shifts_absences_aggregated_fields
  sum: shifts_absences_aggregated_fields
  avgDistinct: shifts_absences_aggregated_fields
  sumDistinct: shifts_absences_aggregated_fields
  min: shifts_absences_aggregated_fields
  max: shifts_absences_aggregated_fields
}

type shifts_absences_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int

  """Abwesenheit gilt nur für diese spezifische Anmeldung"""
  shifts_assignment: Int
  shifts_from: Int

  """Eine allgemeine Abwesenheit gilt für alle Anmeldungen des Mitglieds"""
  shifts_is_for_all_assignments: Int

  """
  Während einem Urlaub ist kein Einkauf möglich und es werden keine Schichtpunkte abgezogen.
  """
  shifts_is_holiday: Int

  """Wähle entweder ein Mitglied oder eine verknüpfte Anmeldung aus."""
  shifts_membership: Int

  """Nur angenommene Urlaube werden im Schichtkalender aktiv."""
  shifts_status: Int
  shifts_to: Int
  user_created: Int
  user_updated: Int
}

type shifts_absences_aggregated_fields {
  id: Float

  """Abwesenheit gilt nur für diese spezifische Anmeldung"""
  shifts_assignment: Float

  """Wähle entweder ein Mitglied oder eine verknüpfte Anmeldung aus."""
  shifts_membership: Float
}

type shifts_absences_mutated {
  key: ID!
  event: EventEnum
  data: shifts_absences
}

type shifts_assignments {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  shifts_from: Date!
  shifts_from_func: date_functions
  shifts_is_coordination: Boolean

  """Soll diese Anmeldung langfristig aktiv sein?"""
  shifts_is_regular: Boolean
  shifts_membership(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
  shifts_shift(filter: shifts_shifts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): shifts_shifts

  """Kann freigelassen werden für fortwährende Anmeldung"""
  shifts_to: Date
  shifts_to_func: date_functions
  user_created: String
  user_updated: String
  shifts_absences(filter: shifts_absences_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [shifts_absences]
  shifts_absences_func: count_functions
}

type shifts_assignments_aggregated {
  group: JSON
  countAll: Int
  count: shifts_assignments_aggregated_count
  countDistinct: shifts_assignments_aggregated_count
  avg: shifts_assignments_aggregated_fields
  sum: shifts_assignments_aggregated_fields
  avgDistinct: shifts_assignments_aggregated_fields
  sumDistinct: shifts_assignments_aggregated_fields
  min: shifts_assignments_aggregated_fields
  max: shifts_assignments_aggregated_fields
}

type shifts_assignments_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  shifts_from: Int
  shifts_is_coordination: Int

  """Soll diese Anmeldung langfristig aktiv sein?"""
  shifts_is_regular: Int
  shifts_membership: Int
  shifts_shift: Int

  """Kann freigelassen werden für fortwährende Anmeldung"""
  shifts_to: Int
  user_created: Int
  user_updated: Int

  """Abwesenheit gilt nur für diese Schicht"""
  shifts_absences: Int
}

type shifts_assignments_aggregated_fields {
  id: Float
  shifts_membership: Float
  shifts_shift: Float
}

type shifts_assignments_mutated {
  key: ID!
  event: EventEnum
  data: shifts_assignments
}

type shifts_categories {
  id: ID!
  name: String
}

type shifts_categories_aggregated {
  group: JSON
  countAll: Int
  count: shifts_categories_aggregated_count
  countDistinct: shifts_categories_aggregated_count
  avg: shifts_categories_aggregated_fields
  sum: shifts_categories_aggregated_fields
  avgDistinct: shifts_categories_aggregated_fields
  sumDistinct: shifts_categories_aggregated_fields
  min: shifts_categories_aggregated_fields
  max: shifts_categories_aggregated_fields
}

type shifts_categories_aggregated_count {
  id: Int
  name: Int
}

type shifts_categories_aggregated_fields {
  id: Float
}

type shifts_categories_mutated {
  key: ID!
  event: EventEnum
  data: shifts_categories
}

type shifts_holidays_public {
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  name: String
  date: Date
  date_func: date_functions
}

type shifts_holidays_public_aggregated {
  group: JSON
  countAll: Int
  count: shifts_holidays_public_aggregated_count
  countDistinct: shifts_holidays_public_aggregated_count
  avg: shifts_holidays_public_aggregated_fields
  sum: shifts_holidays_public_aggregated_fields
  avgDistinct: shifts_holidays_public_aggregated_fields
  sumDistinct: shifts_holidays_public_aggregated_fields
  min: shifts_holidays_public_aggregated_fields
  max: shifts_holidays_public_aggregated_fields
}

type shifts_holidays_public_aggregated_count {
  id: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  name: Int
  date: Int
}

type shifts_holidays_public_aggregated_fields {
  id: Float
}

type shifts_holidays_public_mutated {
  key: ID!
  event: EventEnum
  data: shifts_holidays_public
}

type shifts_logs {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  shifts_date: Date
  shifts_date_func: date_functions
  shifts_membership(filter: memberships_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): memberships
  shifts_note: String
  shifts_score: Int
  shifts_shift(filter: shifts_shifts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): shifts_shifts

  """Was genau soll dokumentiert werden?"""
  shifts_type: String!
  user_created: String
  user_updated: String
}

type shifts_logs_aggregated {
  group: JSON
  countAll: Int
  count: shifts_logs_aggregated_count
  countDistinct: shifts_logs_aggregated_count
  avg: shifts_logs_aggregated_fields
  sum: shifts_logs_aggregated_fields
  avgDistinct: shifts_logs_aggregated_fields
  sumDistinct: shifts_logs_aggregated_fields
  min: shifts_logs_aggregated_fields
  max: shifts_logs_aggregated_fields
}

type shifts_logs_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  shifts_date: Int
  shifts_membership: Int
  shifts_note: Int
  shifts_score: Int
  shifts_shift: Int

  """Was genau soll dokumentiert werden?"""
  shifts_type: Int
  user_created: Int
  user_updated: Int
}

type shifts_logs_aggregated_fields {
  id: Float
  shifts_membership: Float
  shifts_score: Float
  shifts_shift: Float
}

type shifts_logs_mutated {
  key: ID!
  event: EventEnum
  data: shifts_logs
}

type shifts_shifts {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!

  """Dürfen sich Mitglieder für diese Schicht selbstständig anmelden?"""
  shifts_allow_self_assignment: Boolean
  shifts_description: String
  shifts_from: Date
  shifts_from_func: date_functions
  shifts_from_time: Date
  shifts_from_time_func: time_functions
  shifts_is_all_day: Boolean

  """Soll die Schicht sich regelmäßig wiederholen?"""
  shifts_is_regular: Boolean
  shifts_name: String!
  shifts_needs_coordinator: Boolean

  """Wiederholungsfrequenz in Tagen"""
  shifts_repeats_every: Int
  shifts_slots: Int

  """Nur veröffentlichte Schichten werden im Kalender angezeigt."""
  shifts_status: String

  """Kann freigelassen werden für fortwährende Schicht"""
  shifts_to: Date
  shifts_to_func: date_functions
  shifts_to_time: Date
  shifts_to_time_func: time_functions
  user_created: String
  user_updated: String

  """Schicht findet NICHT an Feiertagen statt"""
  exclude_public_holidays: Boolean
  shifts_category_2(filter: shifts_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): shifts_categories
}

type shifts_shifts_aggregated {
  group: JSON
  countAll: Int
  count: shifts_shifts_aggregated_count
  countDistinct: shifts_shifts_aggregated_count
  avg: shifts_shifts_aggregated_fields
  sum: shifts_shifts_aggregated_fields
  avgDistinct: shifts_shifts_aggregated_fields
  sumDistinct: shifts_shifts_aggregated_fields
  min: shifts_shifts_aggregated_fields
  max: shifts_shifts_aggregated_fields
}

type shifts_shifts_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int

  """Dürfen sich Mitglieder für diese Schicht selbstständig anmelden?"""
  shifts_allow_self_assignment: Int
  shifts_description: Int
  shifts_from: Int
  shifts_from_time: Int
  shifts_is_all_day: Int

  """Soll die Schicht sich regelmäßig wiederholen?"""
  shifts_is_regular: Int
  shifts_name: Int
  shifts_needs_coordinator: Int

  """Wiederholungsfrequenz in Tagen"""
  shifts_repeats_every: Int
  shifts_slots: Int

  """Nur veröffentlichte Schichten werden im Kalender angezeigt."""
  shifts_status: Int

  """Kann freigelassen werden für fortwährende Schicht"""
  shifts_to: Int
  shifts_to_time: Int
  user_created: Int
  user_updated: Int

  """Schicht findet NICHT an Feiertagen statt"""
  exclude_public_holidays: Int

  """Frei lassen für normale Schichten"""
  shifts_category_2: Int
}

type shifts_shifts_aggregated_fields {
  id: Float

  """Wiederholungsfrequenz in Tagen"""
  shifts_repeats_every: Float
  shifts_slots: Float

  """Frei lassen für normale Schichten"""
  shifts_category_2: Float
}

type shifts_shifts_mutated {
  key: ID!
  event: EventEnum
  data: shifts_shifts
}

type time_functions {
  hour: Int
  minute: Int
  second: Int
}

""""""
type version_collectivo_tags {
  date_created: Date
  date_updated: Date
  id: ID
  tags_description: String
  tags_name: String
  tags_sync: Boolean
  user_created: String
  user_updated: String
  tags_users: JSON
}

""""""
type version_collectivo_tags_directus_users {
  collectivo_tags_id: JSON
  directus_users_id: JSON
  id: ID
}

""""""
type version_collectivo_tiles {
  date_created: Date
  date_updated: Date
  id: ID
  sort: Int
  tiles_color: String
  tiles_content: String
  tiles_name: String
  tiles_tag_required: JSON
  user_created: String
  user_updated: String
  tiles_view_for: String
  tiles_buttons: JSON
}

""""""
type version_collectivo_tiles_buttons {
  date_created: Date
  date_updated: Date
  id: ID
  sort: Int
  tiles_is_external: Boolean
  tiles_label: String
  tiles_path: String
  tiles_tile: JSON
  user_created: String
  user_updated: String
}

""""""
type version_directus_sync_id_map {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

""""""
type version_junction_directus_users_files {
  directus_files_id: JSON
  directus_users_id: JSON
  id: ID
}

""""""
type version_memberships {
  date_created: Date
  date_updated: Date

  """Diese Nummer identifiziert das Mitglied"""
  id: ID

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  memberships_card_id: String
  memberships_date_applied: Date
  memberships_date_approved: Date
  memberships_date_cancelled: Date
  memberships_date_ended: Date
  memberships_date_excluded: Date

  """Änderung generiert automatische Rechnung"""
  memberships_shares: Int

  """Lebenszyklus von Beitritt bis Beendet"""
  memberships_status: String
  memberships_type: String
  memberships_user: JSON
  memberships_user_search: String

  """Wenn negativ, dann müssen Schichten nachgeholt werden"""
  shifts_counter: Int
  shifts_orientation_date: Date

  """Welche Art von Schichten macht dieses Mitglied?"""
  shifts_user_type: String
  user_created: String
  user_updated: String
  shifts_can_be_coordinator: Boolean
  coshoppers: JSON
  kids: JSON
  memberships_invoices: JSON
  shifts_categories_allowed: JSON
}

""""""
type version_memberships_coshoppers {
  date_created: Date
  date_updated: Date
  first_name: String
  id: ID
  last_name: String

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  membership_card_id: String
  user_created: JSON
  user_updated: JSON
}

""""""
type version_memberships_memberships_coshoppers {
  id: ID
  memberships_coshoppers_id: JSON
  memberships_id: JSON
}

""""""
type version_memberships_memberships_coshoppers_1 {
  id: ID
  memberships_coshoppers_id: JSON
  memberships_id: JSON
}

""""""
type version_memberships_shifts_categories {
  id: ID
  memberships_id: JSON
  shifts_categories_id: JSON
}

""""""
type version_messages_campaigns {
  date_created: Date
  date_updated: Date
  id: ID
  messages_campaign_status: String
  messages_context: JSON
  messages_template: JSON
  user_created: String
  user_updated: String
  messages_recipients: JSON
}

""""""
type version_messages_campaigns_directus_users {
  directus_users_id: JSON
  id: ID
  messages_campaigns_id: JSON
}

""""""
type version_messages_designs {
  date_created: Date
  date_updated: Date
  id: ID

  """Add {{content}} where the template should be inserted"""
  messages_design_html: String
  messages_design_name: String
  user_created: JSON
  user_updated: JSON
}

""""""
type version_messages_messages {
  date_created: Date
  date_updated: Date
  id: ID
  messages_campaign: JSON
  messages_message_status: String
  messages_recipient: JSON
  messages_template: JSON
  user_created: String
  user_updated: String
}

""""""
type version_messages_templates {
  date_created: Date
  date_updated: Date
  id: ID

  """
  Verwende {{recipient_first_name}} {{recipient_last_name}} um Vor- und Nachnamen automatisch einzufügen.
  """
  messages_content: String
  messages_design: JSON

  """The method that should be used to deliver the message."""
  messages_method: String
  messages_name: String
  messages_subject: String
  user_created: String
  user_updated: String
}

""""""
type version_mila_automations {
  date_created: Date
  date_updated: Date
  id: ID
  mila_active: Boolean
  mila_key: String
  mila_label: String
  mila_template: JSON
  user_created: JSON
  user_updated: JSON
}

""""""
type version_milaccess_log {
  coshopper: JSON
  date: Date
  id: ID
  membership: JSON
}

""""""
type version_payments_invoices_entries {
  date_created: Date
  date_updated: Date
  id: ID
  payments_description: String
  payments_invoice: JSON

  """Price is in cents."""
  payments_price: Int
  payments_quantity: Int
  user_created: String
  user_updated: String
}

""""""
type version_payments_invoices_out {
  date_created: Date
  date_updated: Date
  id: ID
  lotzapp_id: String
  memberships_membership: JSON
  payments_date_issued: Date
  payments_date_paid: Date
  payments_notes: String
  payments_recipient_user: JSON
  payments_status: String
  user_created: String
  user_updated: String
  payments_entries: JSON
}

""""""
type version_shifts_absences {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_assignment: JSON
  shifts_from: Date

  """Eine allgemeine Abwesenheit gilt für alle Anmeldungen des Mitglieds"""
  shifts_is_for_all_assignments: Boolean

  """
  Während einem Urlaub ist kein Einkauf möglich und es werden keine Schichtpunkte abgezogen.
  """
  shifts_is_holiday: Boolean
  shifts_membership: JSON

  """Nur angenommene Urlaube werden im Schichtkalender aktiv."""
  shifts_status: String
  shifts_to: Date
  user_created: String
  user_updated: String
}

""""""
type version_shifts_assignments {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_from: Date
  shifts_is_coordination: Boolean

  """Soll diese Anmeldung langfristig aktiv sein?"""
  shifts_is_regular: Boolean
  shifts_membership: JSON
  shifts_shift: JSON

  """Kann freigelassen werden für fortwährende Anmeldung"""
  shifts_to: Date
  user_created: String
  user_updated: String
  shifts_absences: JSON
}

""""""
type version_shifts_categories {
  id: ID
  name: String
}

""""""
type version_shifts_holidays_public {
  id: ID
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  name: String
  date: Date
}

""""""
type version_shifts_logs {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_date: Date
  shifts_membership: JSON
  shifts_note: String
  shifts_score: Int
  shifts_shift: JSON

  """Was genau soll dokumentiert werden?"""
  shifts_type: String
  user_created: String
  user_updated: String
}

""""""
type version_shifts_shifts {
  date_created: Date
  date_updated: Date
  id: ID

  """Dürfen sich Mitglieder für diese Schicht selbstständig anmelden?"""
  shifts_allow_self_assignment: Boolean
  shifts_description: String
  shifts_from: Date
  shifts_from_time: Date
  shifts_is_all_day: Boolean

  """Soll die Schicht sich regelmäßig wiederholen?"""
  shifts_is_regular: Boolean
  shifts_name: String
  shifts_needs_coordinator: Boolean

  """Wiederholungsfrequenz in Tagen"""
  shifts_repeats_every: Int
  shifts_slots: Int

  """Nur veröffentlichte Schichten werden im Kalender angezeigt."""
  shifts_status: String

  """Kann freigelassen werden für fortwährende Schicht"""
  shifts_to: Date
  shifts_to_time: Date
  user_created: String
  user_updated: String

  """Schicht findet NICHT an Feiertagen statt"""
  exclude_public_holidays: Boolean
  shifts_category_2: JSON
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input collectivo_tags_directus_users_filter {
  collectivo_tags_id: collectivo_tags_filter
  directus_users_id: directus_users_filter
  id: number_filter_operators
  _and: [collectivo_tags_directus_users_filter]
  _or: [collectivo_tags_directus_users_filter]
}

input collectivo_tags_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  tags_description: string_filter_operators
  tags_name: string_filter_operators
  tags_sync: boolean_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  tags_users: collectivo_tags_directus_users_filter
  tags_users_func: count_function_filter_operators
  _and: [collectivo_tags_filter]
  _or: [collectivo_tags_filter]
}

input collectivo_tiles_buttons_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  tiles_is_external: boolean_filter_operators
  tiles_label: string_filter_operators
  tiles_path: string_filter_operators
  tiles_tile: collectivo_tiles_filter
  user_created: string_filter_operators
  user_updated: string_filter_operators
  _and: [collectivo_tiles_buttons_filter]
  _or: [collectivo_tiles_buttons_filter]
}

input collectivo_tiles_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  tiles_color: string_filter_operators
  tiles_content: string_filter_operators
  tiles_name: string_filter_operators
  tiles_tag_required: collectivo_tags_filter
  user_created: string_filter_operators
  user_updated: string_filter_operators
  tiles_view_for: string_filter_operators
  tiles_buttons: collectivo_tiles_buttons_filter
  tiles_buttons_func: count_function_filter_operators
  _and: [collectivo_tiles_filter]
  _or: [collectivo_tiles_filter]
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_collectivo_tags_directus_users_input {
  collectivo_tags_id: create_collectivo_tags_input
  directus_users_id: create_directus_users_input
  id: ID
}

input create_collectivo_tags_input {
  date_created: Date
  date_updated: Date
  id: ID
  tags_description: String
  tags_name: String!
  tags_sync: Boolean
  user_created: String
  user_updated: String
  tags_users: [create_collectivo_tags_directus_users_input]
}

input create_collectivo_tiles_buttons_input {
  date_created: Date
  date_updated: Date
  id: ID
  sort: Int
  tiles_is_external: Boolean
  tiles_label: String
  tiles_path: String
  tiles_tile: create_collectivo_tiles_input
  user_created: String
  user_updated: String
}

input create_collectivo_tiles_input {
  date_created: Date
  date_updated: Date
  id: ID
  sort: Int
  tiles_color: String
  tiles_content: String
  tiles_name: String!
  tiles_tag_required: create_collectivo_tags_input
  user_created: String
  user_updated: String
  tiles_view_for: String
  tiles_buttons: [create_collectivo_tiles_buttons_input]
}

input create_directus_access_input {
  id: ID
  role: create_directus_roles_input
  user: create_directus_users_input
  policy: create_directus_policies_input
  sort: Int
}

input create_directus_files_input {
  id: ID
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder: create_directus_folders_input
  uploaded_by: create_directus_users_input
  created_on: Date
  modified_by: create_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input create_directus_folders_input {
  id: ID
  name: String!
  parent: create_directus_folders_input
}

input create_directus_permissions_input {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: create_directus_policies_input
}

input create_directus_policies_input {
  id: ID
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions: [create_directus_permissions_input]
  users: [create_directus_access_input]
  roles: [create_directus_access_input]
}

input create_directus_roles_input {
  id: ID
  name: String!
  icon: String
  description: String
  parent: create_directus_roles_input
  children: [create_directus_roles_input]
  policies: [create_directus_access_input]
  users: [create_directus_users_input]
}

input create_directus_sync_id_map_input {
  id: ID
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
}

input create_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: create_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: create_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  lotzapp_id: String
  memberships_birthday: Date
  memberships_city: String
  memberships_country: String
  memberships_door: String
  memberships_gender: String
  memberships_occupation: String
  memberships_organization_id: String
  memberships_organization_name: String
  memberships_organization_type: String
  memberships_person_type: String
  memberships_phone: String
  memberships_postcode: String
  memberships_stair: String
  memberships_street: String
  memberships_streetnumber: String
  mila_pr_approved: Boolean
  mila_survey_contact: String
  mila_survey_motivation: String
  payments_account_iban: String
  payments_account_owner: String
  payments_type: String
  mila_groups_interested_2: String
  mila_skills_2: String
  survey_languages: String
  survey_languages_additional: String
  hide_name: Boolean
  memberships: [create_memberships_input]
  mila_documents: [create_junction_directus_users_files_input]
  collectivo_tags: [create_collectivo_tags_directus_users_input]
  messages_campaigns: [create_messages_campaigns_directus_users_input]
  policies: [create_directus_access_input]
}

input create_junction_directus_users_files_input {
  directus_files_id: create_directus_files_input
  directus_users_id: create_directus_users_input
  id: ID
}

input create_memberships_coshoppers_input {
  date_created: Date
  date_updated: Date
  first_name: String!
  id: ID
  last_name: String!

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  membership_card_id: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_memberships_input {
  date_created: Date
  date_updated: Date

  """Diese Nummer identifiziert das Mitglied"""
  id: ID

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  memberships_card_id: String
  memberships_date_applied: Date
  memberships_date_approved: Date
  memberships_date_cancelled: Date
  memberships_date_ended: Date
  memberships_date_excluded: Date

  """Änderung generiert automatische Rechnung"""
  memberships_shares: Int

  """Lebenszyklus von Beitritt bis Beendet"""
  memberships_status: String
  memberships_type: String
  memberships_user: create_directus_users_input
  memberships_user_search: String

  """Wenn negativ, dann müssen Schichten nachgeholt werden"""
  shifts_counter: Int
  shifts_orientation_date: Date

  """Welche Art von Schichten macht dieses Mitglied?"""
  shifts_user_type: String
  user_created: String
  user_updated: String
  shifts_can_be_coordinator: Boolean
  coshoppers: [create_memberships_memberships_coshoppers_input]
  kids: [create_memberships_memberships_coshoppers_1_input]
  memberships_invoices: [create_payments_invoices_out_input]
  shifts_categories_allowed: [create_memberships_shifts_categories_input]
}

input create_memberships_memberships_coshoppers_1_input {
  id: ID
  memberships_coshoppers_id: create_memberships_coshoppers_input
  memberships_id: create_memberships_input
}

input create_memberships_memberships_coshoppers_input {
  id: ID
  memberships_coshoppers_id: create_memberships_coshoppers_input
  memberships_id: create_memberships_input
}

input create_memberships_shifts_categories_input {
  id: ID
  memberships_id: create_memberships_input
  shifts_categories_id: create_shifts_categories_input
}

input create_messages_campaigns_directus_users_input {
  directus_users_id: create_directus_users_input
  id: ID
  messages_campaigns_id: create_messages_campaigns_input
}

input create_messages_campaigns_input {
  date_created: Date
  date_updated: Date
  id: ID
  messages_campaign_status: String
  messages_context: JSON
  messages_template: create_messages_templates_input
  user_created: String
  user_updated: String
  messages_recipients: [create_messages_campaigns_directus_users_input]
}

input create_messages_designs_input {
  date_created: Date
  date_updated: Date
  id: ID

  """Add {{content}} where the template should be inserted"""
  messages_design_html: String!
  messages_design_name: String!
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_messages_messages_input {
  date_created: Date
  date_updated: Date
  id: ID
  messages_campaign: create_messages_campaigns_input
  messages_message_status: String
  messages_recipient: create_directus_users_input
  messages_template: create_messages_templates_input
  user_created: String
  user_updated: String
}

input create_messages_templates_input {
  date_created: Date
  date_updated: Date
  id: ID

  """
  Verwende {{recipient_first_name}} {{recipient_last_name}} um Vor- und Nachnamen automatisch einzufügen.
  """
  messages_content: String
  messages_design: create_messages_designs_input

  """The method that should be used to deliver the message."""
  messages_method: String
  messages_name: String!
  messages_subject: String
  user_created: String
  user_updated: String
}

input create_mila_automations_input {
  date_created: Date
  date_updated: Date
  id: ID
  mila_active: Boolean
  mila_key: String!
  mila_label: String
  mila_template: create_messages_templates_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_milaccess_log_input {
  coshopper: create_memberships_coshoppers_input
  date: Date
  id: ID
  membership: create_memberships_input
}

input create_payments_invoices_entries_input {
  date_created: Date
  date_updated: Date
  id: ID
  payments_description: String
  payments_invoice: create_payments_invoices_out_input

  """Price is in cents."""
  payments_price: Int
  payments_quantity: Int
  user_created: String
  user_updated: String
}

input create_payments_invoices_out_input {
  date_created: Date
  date_updated: Date
  id: ID
  lotzapp_id: String
  memberships_membership: create_memberships_input
  payments_date_issued: Date
  payments_date_paid: Date
  payments_notes: String
  payments_recipient_user: create_directus_users_input
  payments_status: String
  user_created: String
  user_updated: String
  payments_entries: [create_payments_invoices_entries_input]
}

input create_shifts_absences_input {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_assignment: create_shifts_assignments_input
  shifts_from: Date!

  """Eine allgemeine Abwesenheit gilt für alle Anmeldungen des Mitglieds"""
  shifts_is_for_all_assignments: Boolean

  """
  Während einem Urlaub ist kein Einkauf möglich und es werden keine Schichtpunkte abgezogen.
  """
  shifts_is_holiday: Boolean!
  shifts_membership: create_memberships_input

  """Nur angenommene Urlaube werden im Schichtkalender aktiv."""
  shifts_status: String
  shifts_to: Date!
  user_created: String
  user_updated: String
}

input create_shifts_assignments_input {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_from: Date!
  shifts_is_coordination: Boolean

  """Soll diese Anmeldung langfristig aktiv sein?"""
  shifts_is_regular: Boolean
  shifts_membership: create_memberships_input
  shifts_shift: create_shifts_shifts_input

  """Kann freigelassen werden für fortwährende Anmeldung"""
  shifts_to: Date
  user_created: String
  user_updated: String
  shifts_absences: [create_shifts_absences_input]
}

input create_shifts_categories_input {
  id: ID
  name: String
}

input create_shifts_holidays_public_input {
  id: ID
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  name: String
  date: Date
}

input create_shifts_logs_input {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_date: Date
  shifts_membership: create_memberships_input
  shifts_note: String
  shifts_score: Int
  shifts_shift: create_shifts_shifts_input

  """Was genau soll dokumentiert werden?"""
  shifts_type: String!
  user_created: String
  user_updated: String
}

input create_shifts_shifts_input {
  date_created: Date
  date_updated: Date
  id: ID

  """Dürfen sich Mitglieder für diese Schicht selbstständig anmelden?"""
  shifts_allow_self_assignment: Boolean
  shifts_description: String
  shifts_from: Date
  shifts_from_time: Date
  shifts_is_all_day: Boolean

  """Soll die Schicht sich regelmäßig wiederholen?"""
  shifts_is_regular: Boolean
  shifts_name: String!
  shifts_needs_coordinator: Boolean

  """Wiederholungsfrequenz in Tagen"""
  shifts_repeats_every: Int
  shifts_slots: Int

  """Nur veröffentlichte Schichten werden im Kalender angezeigt."""
  shifts_status: String

  """Kann freigelassen werden für fortwährende Schicht"""
  shifts_to: Date
  shifts_to_time: Date
  user_created: String
  user_updated: String

  """Schicht findet NICHT an Feiertagen statt"""
  exclude_public_holidays: Boolean
  shifts_category_2: create_shifts_categories_input
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input directus_access_filter {
  id: string_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

input directus_activity_filter {
  id: number_filter_operators
  action: string_filter_operators
  user: directus_users_filter
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  ip: string_filter_operators
  user_agent: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  comment: string_filter_operators
  origin: string_filter_operators
  revisions: directus_revisions_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_dashboards_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  note: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  color: string_filter_operators
  panels: directus_panels_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_files_filter {
  id: string_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  tus_id: string_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  description: string_filter_operators
  status: string_filter_operators
  trigger: string_filter_operators
  accountability: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  operation: directus_operations_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  operations: directus_operations_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  id: string_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_operations_filter {
  id: string_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

input directus_panels_filter {
  id: string_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

input directus_permissions_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

input directus_policies_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  permissions: directus_permissions_filter
  permissions_func: count_function_filter_operators
  users: directus_access_filter
  users_func: count_function_filter_operators
  roles: directus_access_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_revisions_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

input directus_roles_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_filter
  children_func: count_function_filter_operators
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  users: directus_users_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

input directus_sync_id_map_filter {
  id: number_filter_operators
  table: string_filter_operators
  sync_id: string_filter_operators
  local_id: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [directus_sync_id_map_filter]
  _or: [directus_sync_id_map_filter]
}

input directus_users_filter {
  id: string_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  lotzapp_id: string_filter_operators
  memberships_birthday: date_filter_operators
  memberships_birthday_func: date_function_filter_operators
  memberships_city: string_filter_operators
  memberships_country: string_filter_operators
  memberships_door: string_filter_operators
  memberships_gender: string_filter_operators
  memberships_occupation: string_filter_operators
  memberships_organization_id: string_filter_operators
  memberships_organization_name: string_filter_operators
  memberships_organization_type: string_filter_operators
  memberships_person_type: string_filter_operators
  memberships_phone: string_filter_operators
  memberships_postcode: string_filter_operators
  memberships_stair: string_filter_operators
  memberships_street: string_filter_operators
  memberships_streetnumber: string_filter_operators
  mila_pr_approved: boolean_filter_operators
  mila_survey_contact: string_filter_operators
  mila_survey_motivation: string_filter_operators
  payments_account_iban: string_filter_operators
  payments_account_owner: string_filter_operators
  payments_type: string_filter_operators
  mila_groups_interested_2: string_filter_operators
  mila_skills_2: string_filter_operators
  survey_languages: string_filter_operators
  survey_languages_additional: string_filter_operators
  hide_name: boolean_filter_operators
  memberships: memberships_filter
  memberships_func: count_function_filter_operators
  mila_documents: junction_directus_users_files_filter
  mila_documents_func: count_function_filter_operators
  collectivo_tags: collectivo_tags_directus_users_filter
  collectivo_tags_func: count_function_filter_operators
  messages_campaigns: messages_campaigns_directus_users_filter
  messages_campaigns_func: count_function_filter_operators
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

input directus_versions_filter {
  id: string_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  hash: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input junction_directus_users_files_filter {
  directus_files_id: directus_files_filter
  directus_users_id: directus_users_filter
  id: number_filter_operators
  _and: [junction_directus_users_files_filter]
  _or: [junction_directus_users_files_filter]
}

input memberships_coshoppers_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  first_name: string_filter_operators
  id: number_filter_operators
  last_name: string_filter_operators
  membership_card_id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [memberships_coshoppers_filter]
  _or: [memberships_coshoppers_filter]
}

input memberships_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  memberships_card_id: string_filter_operators
  memberships_date_applied: date_filter_operators
  memberships_date_applied_func: date_function_filter_operators
  memberships_date_approved: date_filter_operators
  memberships_date_approved_func: date_function_filter_operators
  memberships_date_cancelled: date_filter_operators
  memberships_date_cancelled_func: date_function_filter_operators
  memberships_date_ended: date_filter_operators
  memberships_date_ended_func: date_function_filter_operators
  memberships_date_excluded: date_filter_operators
  memberships_date_excluded_func: date_function_filter_operators
  memberships_shares: number_filter_operators
  memberships_status: string_filter_operators
  memberships_type: string_filter_operators
  memberships_user: directus_users_filter
  memberships_user_search: string_filter_operators
  shifts_counter: number_filter_operators
  shifts_orientation_date: date_filter_operators
  shifts_orientation_date_func: date_function_filter_operators
  shifts_user_type: string_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  shifts_can_be_coordinator: boolean_filter_operators
  coshoppers: memberships_memberships_coshoppers_filter
  coshoppers_func: count_function_filter_operators
  kids: memberships_memberships_coshoppers_1_filter
  kids_func: count_function_filter_operators
  memberships_invoices: payments_invoices_out_filter
  memberships_invoices_func: count_function_filter_operators
  shifts_categories_allowed: memberships_shifts_categories_filter
  shifts_categories_allowed_func: count_function_filter_operators
  _and: [memberships_filter]
  _or: [memberships_filter]
}

input memberships_memberships_coshoppers_1_filter {
  id: number_filter_operators
  memberships_coshoppers_id: memberships_coshoppers_filter
  memberships_id: memberships_filter
  _and: [memberships_memberships_coshoppers_1_filter]
  _or: [memberships_memberships_coshoppers_1_filter]
}

input memberships_memberships_coshoppers_filter {
  id: number_filter_operators
  memberships_coshoppers_id: memberships_coshoppers_filter
  memberships_id: memberships_filter
  _and: [memberships_memberships_coshoppers_filter]
  _or: [memberships_memberships_coshoppers_filter]
}

input memberships_shifts_categories_filter {
  id: number_filter_operators
  memberships_id: memberships_filter
  shifts_categories_id: shifts_categories_filter
  _and: [memberships_shifts_categories_filter]
  _or: [memberships_shifts_categories_filter]
}

input messages_campaigns_directus_users_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  messages_campaigns_id: messages_campaigns_filter
  _and: [messages_campaigns_directus_users_filter]
  _or: [messages_campaigns_directus_users_filter]
}

input messages_campaigns_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  messages_campaign_status: string_filter_operators
  messages_context: string_filter_operators
  messages_context_func: count_function_filter_operators
  messages_template: messages_templates_filter
  user_created: string_filter_operators
  user_updated: string_filter_operators
  messages_recipients: messages_campaigns_directus_users_filter
  messages_recipients_func: count_function_filter_operators
  _and: [messages_campaigns_filter]
  _or: [messages_campaigns_filter]
}

input messages_designs_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  messages_design_html: string_filter_operators
  messages_design_name: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [messages_designs_filter]
  _or: [messages_designs_filter]
}

input messages_messages_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  messages_campaign: messages_campaigns_filter
  messages_message_status: string_filter_operators
  messages_recipient: directus_users_filter
  messages_template: messages_templates_filter
  user_created: string_filter_operators
  user_updated: string_filter_operators
  _and: [messages_messages_filter]
  _or: [messages_messages_filter]
}

input messages_templates_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  messages_content: string_filter_operators
  messages_design: messages_designs_filter
  messages_method: string_filter_operators
  messages_name: string_filter_operators
  messages_subject: string_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  _and: [messages_templates_filter]
  _or: [messages_templates_filter]
}

input mila_automations_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  mila_active: boolean_filter_operators
  mila_key: string_filter_operators
  mila_label: string_filter_operators
  mila_template: messages_templates_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [mila_automations_filter]
  _or: [mila_automations_filter]
}

input milaccess_log_filter {
  coshopper: memberships_coshoppers_filter
  date: date_filter_operators
  date_func: date_function_filter_operators
  id: number_filter_operators
  membership: memberships_filter
  _and: [milaccess_log_filter]
  _or: [milaccess_log_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input payments_invoices_entries_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  payments_description: string_filter_operators
  payments_invoice: payments_invoices_out_filter
  payments_price: number_filter_operators
  payments_quantity: number_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  _and: [payments_invoices_entries_filter]
  _or: [payments_invoices_entries_filter]
}

input payments_invoices_out_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  lotzapp_id: string_filter_operators
  memberships_membership: memberships_filter
  payments_date_issued: date_filter_operators
  payments_date_issued_func: date_function_filter_operators
  payments_date_paid: date_filter_operators
  payments_date_paid_func: date_function_filter_operators
  payments_notes: string_filter_operators
  payments_recipient_user: directus_users_filter
  payments_status: string_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  payments_entries: payments_invoices_entries_filter
  payments_entries_func: count_function_filter_operators
  _and: [payments_invoices_out_filter]
  _or: [payments_invoices_out_filter]
}

input shifts_absences_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  shifts_assignment: shifts_assignments_filter
  shifts_from: date_filter_operators
  shifts_from_func: date_function_filter_operators
  shifts_is_for_all_assignments: boolean_filter_operators
  shifts_is_holiday: boolean_filter_operators
  shifts_membership: memberships_filter
  shifts_status: string_filter_operators
  shifts_to: date_filter_operators
  shifts_to_func: date_function_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  _and: [shifts_absences_filter]
  _or: [shifts_absences_filter]
}

input shifts_assignments_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  shifts_from: date_filter_operators
  shifts_from_func: date_function_filter_operators
  shifts_is_coordination: boolean_filter_operators
  shifts_is_regular: boolean_filter_operators
  shifts_membership: memberships_filter
  shifts_shift: shifts_shifts_filter
  shifts_to: date_filter_operators
  shifts_to_func: date_function_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  shifts_absences: shifts_absences_filter
  shifts_absences_func: count_function_filter_operators
  _and: [shifts_assignments_filter]
  _or: [shifts_assignments_filter]
}

input shifts_categories_filter {
  id: number_filter_operators
  name: string_filter_operators
  _and: [shifts_categories_filter]
  _or: [shifts_categories_filter]
}

input shifts_holidays_public_filter {
  id: number_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  name: string_filter_operators
  date: date_filter_operators
  date_func: date_function_filter_operators
  _and: [shifts_holidays_public_filter]
  _or: [shifts_holidays_public_filter]
}

input shifts_logs_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  shifts_date: date_filter_operators
  shifts_date_func: date_function_filter_operators
  shifts_membership: memberships_filter
  shifts_note: string_filter_operators
  shifts_score: number_filter_operators
  shifts_shift: shifts_shifts_filter
  shifts_type: string_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  _and: [shifts_logs_filter]
  _or: [shifts_logs_filter]
}

input shifts_shifts_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: number_filter_operators
  shifts_allow_self_assignment: boolean_filter_operators
  shifts_description: string_filter_operators
  shifts_from: date_filter_operators
  shifts_from_func: date_function_filter_operators
  shifts_from_time: date_filter_operators
  shifts_from_time_func: time_function_filter_operators
  shifts_is_all_day: boolean_filter_operators
  shifts_is_regular: boolean_filter_operators
  shifts_name: string_filter_operators
  shifts_needs_coordinator: boolean_filter_operators
  shifts_repeats_every: number_filter_operators
  shifts_slots: number_filter_operators
  shifts_status: string_filter_operators
  shifts_to: date_filter_operators
  shifts_to_func: date_function_filter_operators
  shifts_to_time: date_filter_operators
  shifts_to_time_func: time_function_filter_operators
  user_created: string_filter_operators
  user_updated: string_filter_operators
  exclude_public_holidays: boolean_filter_operators
  shifts_category_2: shifts_categories_filter
  _and: [shifts_shifts_filter]
  _or: [shifts_shifts_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input time_function_filter_operators {
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input update_collectivo_tags_directus_users_input {
  collectivo_tags_id: update_collectivo_tags_input
  directus_users_id: update_directus_users_input
  id: ID
}

input update_collectivo_tags_input {
  date_created: Date
  date_updated: Date
  id: ID
  tags_description: String
  tags_name: String
  tags_sync: Boolean
  user_created: String
  user_updated: String
  tags_users: [update_collectivo_tags_directus_users_input]
}

input update_collectivo_tiles_buttons_input {
  date_created: Date
  date_updated: Date
  id: ID
  sort: Int
  tiles_is_external: Boolean
  tiles_label: String
  tiles_path: String
  tiles_tile: update_collectivo_tiles_input
  user_created: String
  user_updated: String
}

input update_collectivo_tiles_input {
  date_created: Date
  date_updated: Date
  id: ID
  sort: Int
  tiles_color: String
  tiles_content: String
  tiles_name: String
  tiles_tag_required: update_collectivo_tags_input
  user_created: String
  user_updated: String
  tiles_view_for: String
  tiles_buttons: [update_collectivo_tiles_buttons_input]
}

input update_directus_access_input {
  id: ID
  role: update_directus_roles_input
  user: update_directus_users_input
  policy: update_directus_policies_input
  sort: Int
}

input update_directus_files_input {
  id: ID
  storage: String
  filename_disk: String
  filename_download: String
  title: String
  type: String
  folder: update_directus_folders_input
  uploaded_by: update_directus_users_input
  created_on: Date
  modified_by: update_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input update_directus_folders_input {
  id: ID
  name: String
  parent: update_directus_folders_input
}

input update_directus_permissions_input {
  id: ID
  collection: String
  action: String
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: update_directus_policies_input
}

input update_directus_policies_input {
  id: ID
  name: String
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean
  admin_access: Boolean
  app_access: Boolean
  permissions: [update_directus_permissions_input]
  users: [update_directus_access_input]
  roles: [update_directus_access_input]
}

input update_directus_roles_input {
  id: ID
  name: String
  icon: String
  description: String
  parent: update_directus_roles_input
  children: [update_directus_roles_input]
  policies: [update_directus_access_input]
  users: [update_directus_users_input]
}

input update_directus_sync_id_map_input {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

input update_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: update_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: update_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  lotzapp_id: String
  memberships_birthday: Date
  memberships_city: String
  memberships_country: String
  memberships_door: String
  memberships_gender: String
  memberships_occupation: String
  memberships_organization_id: String
  memberships_organization_name: String
  memberships_organization_type: String
  memberships_person_type: String
  memberships_phone: String
  memberships_postcode: String
  memberships_stair: String
  memberships_street: String
  memberships_streetnumber: String
  mila_pr_approved: Boolean
  mila_survey_contact: String
  mila_survey_motivation: String
  payments_account_iban: String
  payments_account_owner: String
  payments_type: String
  mila_groups_interested_2: String
  mila_skills_2: String
  survey_languages: String
  survey_languages_additional: String
  hide_name: Boolean
  memberships: [update_memberships_input]
  mila_documents: [update_junction_directus_users_files_input]
  collectivo_tags: [update_collectivo_tags_directus_users_input]
  messages_campaigns: [update_messages_campaigns_directus_users_input]
  policies: [update_directus_access_input]
}

input update_junction_directus_users_files_input {
  directus_files_id: update_directus_files_input
  directus_users_id: update_directus_users_input
  id: ID
}

input update_memberships_coshoppers_input {
  date_created: Date
  date_updated: Date
  first_name: String
  id: ID
  last_name: String

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  membership_card_id: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_memberships_input {
  date_created: Date
  date_updated: Date

  """Diese Nummer identifiziert das Mitglied"""
  id: ID

  """Bitte auch in Lotzapp eintragen um Guthaben-Funktion zu aktivieren."""
  memberships_card_id: String
  memberships_date_applied: Date
  memberships_date_approved: Date
  memberships_date_cancelled: Date
  memberships_date_ended: Date
  memberships_date_excluded: Date

  """Änderung generiert automatische Rechnung"""
  memberships_shares: Int

  """Lebenszyklus von Beitritt bis Beendet"""
  memberships_status: String
  memberships_type: String
  memberships_user: update_directus_users_input
  memberships_user_search: String

  """Wenn negativ, dann müssen Schichten nachgeholt werden"""
  shifts_counter: Int
  shifts_orientation_date: Date

  """Welche Art von Schichten macht dieses Mitglied?"""
  shifts_user_type: String
  user_created: String
  user_updated: String
  shifts_can_be_coordinator: Boolean
  coshoppers: [update_memberships_memberships_coshoppers_input]
  kids: [update_memberships_memberships_coshoppers_1_input]
  memberships_invoices: [update_payments_invoices_out_input]
  shifts_categories_allowed: [update_memberships_shifts_categories_input]
}

input update_memberships_memberships_coshoppers_1_input {
  id: ID
  memberships_coshoppers_id: update_memberships_coshoppers_input
  memberships_id: update_memberships_input
}

input update_memberships_memberships_coshoppers_input {
  id: ID
  memberships_coshoppers_id: update_memberships_coshoppers_input
  memberships_id: update_memberships_input
}

input update_memberships_shifts_categories_input {
  id: ID
  memberships_id: update_memberships_input
  shifts_categories_id: update_shifts_categories_input
}

input update_messages_campaigns_directus_users_input {
  directus_users_id: update_directus_users_input
  id: ID
  messages_campaigns_id: update_messages_campaigns_input
}

input update_messages_campaigns_input {
  date_created: Date
  date_updated: Date
  id: ID
  messages_campaign_status: String
  messages_context: JSON
  messages_template: update_messages_templates_input
  user_created: String
  user_updated: String
  messages_recipients: [update_messages_campaigns_directus_users_input]
}

input update_messages_designs_input {
  date_created: Date
  date_updated: Date
  id: ID

  """Add {{content}} where the template should be inserted"""
  messages_design_html: String
  messages_design_name: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_messages_messages_input {
  date_created: Date
  date_updated: Date
  id: ID
  messages_campaign: update_messages_campaigns_input
  messages_message_status: String
  messages_recipient: update_directus_users_input
  messages_template: update_messages_templates_input
  user_created: String
  user_updated: String
}

input update_messages_templates_input {
  date_created: Date
  date_updated: Date
  id: ID

  """
  Verwende {{recipient_first_name}} {{recipient_last_name}} um Vor- und Nachnamen automatisch einzufügen.
  """
  messages_content: String
  messages_design: update_messages_designs_input

  """The method that should be used to deliver the message."""
  messages_method: String
  messages_name: String
  messages_subject: String
  user_created: String
  user_updated: String
}

input update_mila_automations_input {
  date_created: Date
  date_updated: Date
  id: ID
  mila_active: Boolean
  mila_key: String
  mila_label: String
  mila_template: update_messages_templates_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_milaccess_log_input {
  coshopper: update_memberships_coshoppers_input
  date: Date
  id: ID
  membership: update_memberships_input
}

input update_payments_invoices_entries_input {
  date_created: Date
  date_updated: Date
  id: ID
  payments_description: String
  payments_invoice: update_payments_invoices_out_input

  """Price is in cents."""
  payments_price: Int
  payments_quantity: Int
  user_created: String
  user_updated: String
}

input update_payments_invoices_out_input {
  date_created: Date
  date_updated: Date
  id: ID
  lotzapp_id: String
  memberships_membership: update_memberships_input
  payments_date_issued: Date
  payments_date_paid: Date
  payments_notes: String
  payments_recipient_user: update_directus_users_input
  payments_status: String
  user_created: String
  user_updated: String
  payments_entries: [update_payments_invoices_entries_input]
}

input update_shifts_absences_input {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_assignment: update_shifts_assignments_input
  shifts_from: Date

  """Eine allgemeine Abwesenheit gilt für alle Anmeldungen des Mitglieds"""
  shifts_is_for_all_assignments: Boolean

  """
  Während einem Urlaub ist kein Einkauf möglich und es werden keine Schichtpunkte abgezogen.
  """
  shifts_is_holiday: Boolean
  shifts_membership: update_memberships_input

  """Nur angenommene Urlaube werden im Schichtkalender aktiv."""
  shifts_status: String
  shifts_to: Date
  user_created: String
  user_updated: String
}

input update_shifts_assignments_input {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_from: Date
  shifts_is_coordination: Boolean

  """Soll diese Anmeldung langfristig aktiv sein?"""
  shifts_is_regular: Boolean
  shifts_membership: update_memberships_input
  shifts_shift: update_shifts_shifts_input

  """Kann freigelassen werden für fortwährende Anmeldung"""
  shifts_to: Date
  user_created: String
  user_updated: String
  shifts_absences: [update_shifts_absences_input]
}

input update_shifts_categories_input {
  id: ID
  name: String
}

input update_shifts_holidays_public_input {
  id: ID
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  name: String
  date: Date
}

input update_shifts_logs_input {
  date_created: Date
  date_updated: Date
  id: ID
  shifts_date: Date
  shifts_membership: update_memberships_input
  shifts_note: String
  shifts_score: Int
  shifts_shift: update_shifts_shifts_input

  """Was genau soll dokumentiert werden?"""
  shifts_type: String
  user_created: String
  user_updated: String
}

input update_shifts_shifts_input {
  date_created: Date
  date_updated: Date
  id: ID

  """Dürfen sich Mitglieder für diese Schicht selbstständig anmelden?"""
  shifts_allow_self_assignment: Boolean
  shifts_description: String
  shifts_from: Date
  shifts_from_time: Date
  shifts_is_all_day: Boolean

  """Soll die Schicht sich regelmäßig wiederholen?"""
  shifts_is_regular: Boolean
  shifts_name: String
  shifts_needs_coordinator: Boolean

  """Wiederholungsfrequenz in Tagen"""
  shifts_repeats_every: Int
  shifts_slots: Int

  """Nur veröffentlichte Schichten werden im Kalender angezeigt."""
  shifts_status: String

  """Kann freigelassen werden für fortwährende Schicht"""
  shifts_to: Date
  shifts_to_time: Date
  user_created: String
  user_updated: String

  """Schicht findet NICHT an Feiertagen statt"""
  exclude_public_holidays: Boolean
  shifts_category_2: update_shifts_categories_input
}